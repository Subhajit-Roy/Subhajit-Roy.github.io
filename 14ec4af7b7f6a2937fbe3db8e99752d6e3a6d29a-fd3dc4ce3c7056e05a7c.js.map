{"version":3,"file":"14ec4af7b7f6a2937fbe3db8e99752d6e3a6d29a-fd3dc4ce3c7056e05a7c.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@mui/material/Grid/GridContext.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Grid/gridClasses.js","webpack://gatsby-starter-default/./node_modules/@mui/material/Grid/Grid.js","webpack://gatsby-starter-default/./node_modules/@firebase/storage/dist/index.esm2017.js","webpack://gatsby-starter-default/./src/service/fireconf.js"],"sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import _toConsumableArray from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nvar WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nvar gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth'].concat(_toConsumableArray(SPACINGS.map(function (spacing) {\n  return \"spacing-xs-\".concat(spacing);\n})), _toConsumableArray(DIRECTIONS.map(function (direction) {\n  return \"direction-xs-\".concat(direction);\n})), _toConsumableArray(WRAPS.map(function (wrap) {\n  return \"wrap-xs-\".concat(wrap);\n})), _toConsumableArray(GRID_SIZES.map(function (size) {\n  return \"grid-xs-\".concat(size);\n})), _toConsumableArray(GRID_SIZES.map(function (size) {\n  return \"grid-sm-\".concat(size);\n})), _toConsumableArray(GRID_SIZES.map(function (size) {\n  return \"grid-md-\".concat(size);\n})), _toConsumableArray(GRID_SIZES.map(function (size) {\n  return \"grid-lg-\".concat(size);\n})), _toConsumableArray(GRID_SIZES.map(function (size) {\n  return \"grid-xl-\".concat(size);\n}))));\nexport default gridClasses;","import _defineProperty from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  var parse = parseFloat(val);\n  return \"\".concat(parse).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  var size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  var styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    var columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      breakpoints: theme.breakpoints.values\n    });\n    var columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.\n\n    var width = \"\".concat(Math.round(size / columnValue * 10e7) / 10e5, \"%\");\n    var more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      var themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        var fullWidth = \"calc(\".concat(width, \" + \").concat(getOffset(themeSpacing), \")\");\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nexport function generateDirection(_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  var directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme: theme\n  }, directionValues, function (propValue) {\n    var output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[\"& > .\".concat(gridClasses.item)] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap(_ref2) {\n  var theme = _ref2.theme,\n      ownerState = _ref2.ownerState;\n  var container = ownerState.container,\n      rowSpacing = ownerState.rowSpacing;\n  var styles = {};\n\n  if (container && rowSpacing !== 0) {\n    var rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme: theme\n    }, rowSpacingValues, function (propValue) {\n      var themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return _defineProperty({\n          marginTop: \"-\".concat(getOffset(themeSpacing))\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingTop: getOffset(themeSpacing)\n        });\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap(_ref4) {\n  var theme = _ref4.theme,\n      ownerState = _ref4.ownerState;\n  var container = ownerState.container,\n      columnSpacing = ownerState.columnSpacing;\n  var styles = {};\n\n  if (container && columnSpacing !== 0) {\n    var columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme: theme\n    }, columnSpacingValues, function (propValue) {\n      var themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return _defineProperty({\n          width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n          marginLeft: \"-\".concat(getOffset(themeSpacing))\n        }, \"& > .\".concat(gridClasses.item), {\n          paddingLeft: getOffset(themeSpacing)\n        });\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nvar GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var _props$ownerState = props.ownerState,\n        container = _props$ownerState.container,\n        direction = _props$ownerState.direction,\n        item = _props$ownerState.item,\n        lg = _props$ownerState.lg,\n        md = _props$ownerState.md,\n        sm = _props$ownerState.sm,\n        spacing = _props$ownerState.spacing,\n        wrap = _props$ownerState.wrap,\n        xl = _props$ownerState.xl,\n        xs = _props$ownerState.xs,\n        zeroMinWidth = _props$ownerState.zeroMinWidth;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[\"spacing-xs-\".concat(String(spacing))], direction !== 'row' && styles[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && styles[\"wrap-xs-\".concat(String(wrap))], xs !== false && styles[\"grid-xs-\".concat(String(xs))], sm !== false && styles[\"grid-sm-\".concat(String(sm))], md !== false && styles[\"grid-md-\".concat(String(md))], lg !== false && styles[\"grid-lg-\".concat(String(lg))], xl !== false && styles[\"grid-xl-\".concat(String(xl))]];\n  }\n})(function (_ref6) {\n  var ownerState = _ref6.ownerState;\n  return _extends({\n    boxSizing: 'border-box'\n  }, ownerState.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }, ownerState.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n\n  }, ownerState.zeroMinWidth && {\n    minWidth: 0\n  }, ownerState.wrap === 'nowrap' && {\n    flexWrap: 'nowrap'\n  }, ownerState.wrap === 'reverse' && {\n    flexWrap: 'wrap-reverse'\n  });\n}, generateDirection, generateRowGap, generateColumnGap, function (_ref7) {\n  var theme = _ref7.theme,\n      ownerState = _ref7.ownerState;\n  return theme.breakpoints.keys.reduce(function (globalStyles, breakpoint) {\n    // Use side effect over immutability for better performance.\n    generateGrid(globalStyles, theme, breakpoint, ownerState);\n    return globalStyles;\n  }, {});\n});\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      container = ownerState.container,\n      direction = ownerState.direction,\n      item = ownerState.item,\n      lg = ownerState.lg,\n      md = ownerState.md,\n      sm = ownerState.sm,\n      spacing = ownerState.spacing,\n      wrap = ownerState.wrap,\n      xl = ownerState.xl,\n      xs = ownerState.xs,\n      zeroMinWidth = ownerState.zeroMinWidth;\n  var slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && \"spacing-xs-\".concat(String(spacing)), direction !== 'row' && \"direction-xs-\".concat(String(direction)), wrap !== 'wrap' && \"wrap-xs-\".concat(String(wrap)), xs !== false && \"grid-xs-\".concat(String(xs)), sm !== false && \"grid-sm-\".concat(String(sm)), md !== false && \"grid-md-\".concat(String(md)), lg !== false && \"grid-lg-\".concat(String(lg)), xl !== false && \"grid-xl-\".concat(String(xl))]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  var themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  var props = extendSxProp(themeProps);\n\n  var className = props.className,\n      columnsProp = props.columns,\n      columnSpacingProp = props.columnSpacing,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      rowSpacingProp = props.rowSpacing,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var rowSpacing = rowSpacingProp || spacing;\n  var columnSpacing = columnSpacingProp || spacing;\n  var columnsContext = React.useContext(GridContext); // setting prop before context to accomodate nesting\n  // colums set with default breakpoint unit of 12\n\n  var columns = columnsProp || columnsContext || 12;\n\n  var ownerState = _extends({}, props, {\n    columns: columns,\n    container: container,\n    direction: direction,\n    item: item,\n    lg: lg,\n    md: md,\n    sm: sm,\n    rowSpacing: rowSpacing,\n    columnSpacing: columnSpacing,\n    wrap: wrap,\n    xl: xl,\n    xs: xs,\n    zeroMinWidth: zeroMinWidth\n  });\n\n  var classes = useUtilityClasses(ownerState);\n\n  var wrapChild = function wrapChild(element) {\n    return columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n      value: columns,\n      children: element\n    }) : element;\n  };\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import _toConsumableArray from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _possibleConstructorReturn from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _getPrototypeOf from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _regeneratorRuntime from \"/home/subho/Documents/Github/Subhajit-Roy.github.io/PLAS/node_modules/@babel/runtime/regenerator/index.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { getApp, _getProvider, _registerComponent, registerVersion, SDK_VERSION } from '@firebase/app';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\n\nvar StorageError = /*#__PURE__*/function (_FirebaseError) {\n  _inherits(StorageError, _FirebaseError);\n\n  var _super = _createSuper(StorageError);\n\n  /**\r\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n   *  added to the end of the message.\r\n   * @param message  - Error message.\r\n   */\n  function StorageError(code, message) {\n    var _this;\n\n    _classCallCheck(this, StorageError);\n\n    _this = _super.call(this, prependCode(code), \"Firebase Storage: \".concat(message, \" (\").concat(prependCode(code), \")\"));\n    /**\r\n     * Stores custom error data unque to StorageError.\r\n     */\n\n    _this.customData = {\n      serverResponse: null\n    };\n    _this._baseMessage = _this.message; // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), StorageError.prototype);\n    return _this;\n  }\n  /**\r\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n   */\n\n\n  _createClass(StorageError, [{\n    key: \"_codeEquals\",\n    value: function _codeEquals(code) {\n      return prependCode(code) === this.code;\n    }\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\n\n  }, {\n    key: \"serverResponse\",\n    get: function get() {\n      return this.customData.serverResponse;\n    },\n    set: function set(serverResponse) {\n      this.customData.serverResponse = serverResponse;\n\n      if (this.customData.serverResponse) {\n        this.message = \"\".concat(this._baseMessage, \"\\n\").concat(this.customData.serverResponse);\n      } else {\n        this.message = this._baseMessage;\n      }\n    }\n  }]);\n\n  return StorageError;\n}(FirebaseError);\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new StorageError(\"unknown\"\n  /* UNKNOWN */\n  , message);\n}\n\nfunction objectNotFound(path) {\n  return new StorageError(\"object-not-found\"\n  /* OBJECT_NOT_FOUND */\n  , \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new StorageError(\"quota-exceeded\"\n  /* QUOTA_EXCEEDED */\n  , \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new StorageError(\"unauthenticated\"\n  /* UNAUTHENTICATED */\n  , message);\n}\n\nfunction unauthorizedApp() {\n  return new StorageError(\"unauthorized-app\"\n  /* UNAUTHORIZED_APP */\n  , 'This app does not have permission to access Firebase Storage on this project.');\n}\n\nfunction unauthorized(path) {\n  return new StorageError(\"unauthorized\"\n  /* UNAUTHORIZED */\n  , \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new StorageError(\"retry-limit-exceeded\"\n  /* RETRY_LIMIT_EXCEEDED */\n  , 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new StorageError(\"canceled\"\n  /* CANCELED */\n  , 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new StorageError(\"invalid-url\"\n  /* INVALID_URL */\n  , \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new StorageError(\"invalid-default-bucket\"\n  /* INVALID_DEFAULT_BUCKET */\n  , \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new StorageError(\"no-default-bucket\"\n  /* NO_DEFAULT_BUCKET */\n  , 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new StorageError(\"cannot-slice-blob\"\n  /* CANNOT_SLICE_BLOB */\n  , 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new StorageError(\"server-file-wrong-size\"\n  /* SERVER_FILE_WRONG_SIZE */\n  , 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new StorageError(\"no-download-url\"\n  /* NO_DOWNLOAD_URL */\n  , 'The given file does not have any download URLs.');\n}\n/**\r\n * @internal\r\n */\n\n\nfunction invalidArgument(message) {\n  return new StorageError(\"invalid-argument\"\n  /* INVALID_ARGUMENT */\n  , message);\n}\n\nfunction appDeleted() {\n  return new StorageError(\"app-deleted\"\n  /* APP_DELETED */\n  , 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new StorageError(\"invalid-root-operation\"\n  /* INVALID_ROOT_OPERATION */\n  , \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new StorageError(\"invalid-format\"\n  /* INVALID_FORMAT */\n  , \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new StorageError(\"internal-error\"\n  /* INTERNAL_ERROR */\n  , 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\n\n\nvar Location = /*#__PURE__*/function () {\n  function Location(bucket, path) {\n    _classCallCheck(this, Location);\n\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  _createClass(Location, [{\n    key: \"path\",\n    get: function get() {\n      return this.path_;\n    }\n  }, {\n    key: \"isRoot\",\n    get: function get() {\n      return this.path.length === 0;\n    }\n  }, {\n    key: \"fullServerUrl\",\n    value: function fullServerUrl() {\n      var encode = encodeURIComponent;\n      return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n    }\n  }, {\n    key: \"bucketOnlyServerUrl\",\n    value: function bucketOnlyServerUrl() {\n      var encode = encodeURIComponent;\n      return '/b/' + encode(this.bucket) + '/o';\n    }\n  }], [{\n    key: \"makeFromBucketSpec\",\n    value: function makeFromBucketSpec(bucketString, host) {\n      var bucketLocation;\n\n      try {\n        bucketLocation = Location.makeFromUrl(bucketString, host);\n      } catch (e) {\n        // Not valid URL, use as-is. This lets you put bare bucket names in\n        // config.\n        return new Location(bucketString, '');\n      }\n\n      if (bucketLocation.path === '') {\n        return bucketLocation;\n      } else {\n        throw invalidDefaultBucket(bucketString);\n      }\n    }\n  }, {\n    key: \"makeFromUrl\",\n    value: function makeFromUrl(url, host) {\n      var location = null;\n      var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n      function gsModify(loc) {\n        if (loc.path.charAt(loc.path.length - 1) === '/') {\n          loc.path_ = loc.path_.slice(0, -1);\n        }\n      }\n\n      var gsPath = '(/(.*))?$';\n      var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n      var gsIndices = {\n        bucket: 1,\n        path: 3\n      };\n\n      function httpModify(loc) {\n        loc.path_ = decodeURIComponent(loc.path);\n      }\n\n      var version = 'v[A-Za-z0-9_]+';\n      var firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n      var firebaseStoragePath = '(/([^?#]*).*)?$';\n      var firebaseStorageRegExp = new RegExp(\"^https?://\".concat(firebaseStorageHost, \"/\").concat(version, \"/b/\").concat(bucketDomain, \"/o\").concat(firebaseStoragePath), 'i');\n      var firebaseStorageIndices = {\n        bucket: 1,\n        path: 3\n      };\n      var cloudStorageHost = host === DEFAULT_HOST ? '(?:storage.googleapis.com|storage.cloud.google.com)' : host;\n      var cloudStoragePath = '([^?#]*)';\n      var cloudStorageRegExp = new RegExp(\"^https?://\".concat(cloudStorageHost, \"/\").concat(bucketDomain, \"/\").concat(cloudStoragePath), 'i');\n      var cloudStorageIndices = {\n        bucket: 1,\n        path: 2\n      };\n      var groups = [{\n        regex: gsRegex,\n        indices: gsIndices,\n        postModify: gsModify\n      }, {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      }, {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }];\n\n      for (var i = 0; i < groups.length; i++) {\n        var group = groups[i];\n        var captures = group.regex.exec(url);\n\n        if (captures) {\n          var bucketValue = captures[group.indices.bucket];\n          var pathValue = captures[group.indices.path];\n\n          if (!pathValue) {\n            pathValue = '';\n          }\n\n          location = new Location(bucketValue, pathValue);\n          group.postModify(location);\n          break;\n        }\n      }\n\n      if (location == null) {\n        throw invalidUrl(url);\n      }\n\n      return location;\n    }\n  }]);\n\n  return Location;\n}();\n/**\r\n * A request whose promise always fails.\r\n */\n\n\nvar FailRequest = /*#__PURE__*/function () {\n  function FailRequest(error) {\n    _classCallCheck(this, FailRequest);\n\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  _createClass(FailRequest, [{\n    key: \"getPromise\",\n    value: function getPromise() {\n      return this.promise_;\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var _appDelete = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    }\n  }]);\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var retryTimeoutId = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var globalTimeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false;\n\n  function triggerCallback() {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    retryTimeoutId = setTimeout(function () {\n      retryTimeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function clearGlobalTimeout() {\n    if (globalTimeoutId) {\n      clearTimeout(globalTimeoutId);\n    }\n  }\n\n  function handler(success) {\n    if (triggeredCallback) {\n      clearGlobalTimeout();\n      return;\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (success) {\n      clearGlobalTimeout();\n      triggerCallback.call.apply(triggerCallback, [null, success].concat(args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      clearGlobalTimeout();\n      triggerCallback.call.apply(triggerCallback, [null, success].concat(args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n    clearGlobalTimeout();\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (retryTimeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(retryTimeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  globalTimeoutId = setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isNonArrayObject(p) {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw invalidArgument(\"Invalid value for '\".concat(argument, \"'. Expected \").concat(minValue, \" or greater.\"));\n  }\n\n  if (value > maxValue) {\n    throw invalidArgument(\"Invalid value for '\".concat(argument, \"'. Expected \").concat(maxValue, \" or less.\"));\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart, host, protocol) {\n  var origin = host;\n\n  if (protocol == null) {\n    origin = \"https://\".concat(host);\n  }\n\n  return \"\".concat(protocol, \"://\").concat(origin, \"/v0\").concat(urlPart);\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */\n\n\nvar NetworkRequest = /*#__PURE__*/function () {\n  function NetworkRequest(url_, method_, headers_, body_, successCodes_, additionalRetryCodes_, callback_, errorCallback_, timeout_, progressCallback_, connectionFactory_) {\n    var _this2 = this;\n\n    _classCallCheck(this, NetworkRequest);\n\n    this.url_ = url_;\n    this.method_ = method_;\n    this.headers_ = headers_;\n    this.body_ = body_;\n    this.successCodes_ = successCodes_;\n    this.additionalRetryCodes_ = additionalRetryCodes_;\n    this.callback_ = callback_;\n    this.errorCallback_ = errorCallback_;\n    this.timeout_ = timeout_;\n    this.progressCallback_ = progressCallback_;\n    this.connectionFactory_ = connectionFactory_;\n    this.pendingConnection_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this2.resolve_ = resolve;\n      _this2.reject_ = reject;\n\n      _this2.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  _createClass(NetworkRequest, [{\n    key: \"start_\",\n    value: function start_() {\n      var _this3 = this;\n\n      var doTheRequest = function doTheRequest(backoffCallback, canceled) {\n        if (canceled) {\n          backoffCallback(false, new RequestEndStatus(false, null, true));\n          return;\n        }\n\n        var connection = _this3.connectionFactory_();\n\n        _this3.pendingConnection_ = connection;\n\n        var progressListener = function progressListener(progressEvent) {\n          var loaded = progressEvent.loaded;\n          var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n          if (_this3.progressCallback_ !== null) {\n            _this3.progressCallback_(loaded, total);\n          }\n        };\n\n        if (_this3.progressCallback_ !== null) {\n          connection.addUploadProgressListener(progressListener);\n        } // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n        connection.send(_this3.url_, _this3.method_, _this3.body_, _this3.headers_).then(function () {\n          if (_this3.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n\n          _this3.pendingConnection_ = null;\n          var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          var status = connection.getStatus();\n\n          if (!hitServer || _this3.isRetryStatusCode_(status)) {\n            var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n            return;\n          }\n\n          var successCode = _this3.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n      };\n      /**\r\n       * @param requestWentThrough - True if the request eventually went\r\n       *     through, false if it hit the retry limit or was canceled.\r\n       */\n\n\n      var backoffDone = function backoffDone(requestWentThrough, status) {\n        var resolve = _this3.resolve_;\n        var reject = _this3.reject_;\n        var connection = status.connection;\n\n        if (status.wasSuccessCode) {\n          try {\n            var result = _this3.callback_(connection, connection.getResponse());\n\n            if (isJustDef(result)) {\n              resolve(result);\n            } else {\n              resolve();\n            }\n          } catch (e) {\n            reject(e);\n          }\n        } else {\n          if (connection !== null) {\n            var err = unknown();\n            err.serverResponse = connection.getErrorText();\n\n            if (_this3.errorCallback_) {\n              reject(_this3.errorCallback_(connection, err));\n            } else {\n              reject(err);\n            }\n          } else {\n            if (status.canceled) {\n              var _err = _this3.appDelete_ ? appDeleted() : canceled();\n\n              reject(_err);\n            } else {\n              var _err2 = retryLimitExceeded();\n\n              reject(_err2);\n            }\n          }\n        }\n      };\n\n      if (this.canceled_) {\n        backoffDone(false, new RequestEndStatus(false, null, true));\n      } else {\n        this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n      }\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"getPromise\",\n    value: function getPromise() {\n      return this.promise_;\n    }\n    /** @inheritDoc */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(appDelete) {\n      this.canceled_ = true;\n      this.appDelete_ = appDelete || false;\n\n      if (this.backoffId_ !== null) {\n        stop(this.backoffId_);\n      }\n\n      if (this.pendingConnection_ !== null) {\n        this.pendingConnection_.abort();\n      }\n    }\n  }, {\n    key: \"isRetryStatusCode_\",\n    value: function isRetryStatusCode_(status) {\n      // The codes for which to retry came from this page:\n      // https://cloud.google.com/storage/docs/exponential-backoff\n      var isFiveHundredCode = status >= 500 && status < 600;\n      var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n      408, // Too Many Requests: you're getting rate-limited, basically.\n      429];\n      var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n      var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n      return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n    }\n  }]);\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\n\n\nvar RequestEndStatus = /*#__PURE__*/_createClass(function RequestEndStatus(wasSuccessCode, connection, canceled) {\n  _classCallCheck(this, RequestEndStatus);\n\n  this.wasSuccessCode = wasSuccessCode;\n  this.connection = connection;\n  this.canceled = !!canceled;\n});\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers, firebaseVersion) {\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nfunction addAppCheckHeader_(headers, appCheckToken) {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, requestFactory, firebaseVersion) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, requestFactory);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob$1() {\n  var BlobBuilder = getBlobBuilder();\n\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\"unsupported-environment\"\n      /* UNSUPPORTED_ENVIRONMENT */\n      , \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n\nfunction decodeBase64(encoded) {\n  return atob(encoded);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\n\n\nvar StringFormat = {\n  /**\r\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n   * sequence.\r\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n   */\n  RAW: 'raw',\n\n  /**\r\n   * Indicates the string should be interpreted as base64-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64: 'base64',\n\n  /**\r\n   * Indicates the string should be interpreted as base64url-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64URL: 'base64url',\n\n  /**\r\n   * Indicates the string is a data URL, such as one obtained from\r\n   * canvas.toDataURL().\r\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n   * becomes the byte sequence\r\n   * 69 a6 9a\r\n   * (the content-type \"application/octet-stream\" is also applied, but can\r\n   * be overridden in the metadata object).\r\n   */\n  DATA_URL: 'data_url'\n};\n\nvar StringData = /*#__PURE__*/_createClass(function StringData(data, contentType) {\n  _classCallCheck(this, StringData);\n\n  this.data = data;\n  this.contentType = contentType || null;\n});\n/**\r\n * @internal\r\n */\n\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var _invalidChar = hasPlus ? '+' : '/';\n\n          throw invalidFormat(format, \"Invalid character '\" + _invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar DataURLParts = /*#__PURE__*/_createClass(function DataURLParts(dataURL) {\n  _classCallCheck(this, DataURLParts);\n\n  this.base64 = false;\n  this.contentType = null;\n  var matches = dataURL.match(/^data:([^,]+)?,/);\n\n  if (matches === null) {\n    throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n  }\n\n  var middle = matches[1] || null;\n\n  if (middle != null) {\n    this.base64 = endsWith(middle, ';base64');\n    this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n  }\n\n  this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n});\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\n\n\nvar FbsBlob = /*#__PURE__*/function () {\n  function FbsBlob(data, elideCopy) {\n    _classCallCheck(this, FbsBlob);\n\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  _createClass(FbsBlob, [{\n    key: \"size\",\n    value: function size() {\n      return this.size_;\n    }\n  }, {\n    key: \"type\",\n    value: function type() {\n      return this.type_;\n    }\n  }, {\n    key: \"slice\",\n    value: function slice(startByte, endByte) {\n      if (isNativeBlob(this.data_)) {\n        var realBlob = this.data_;\n        var sliced = sliceBlob(realBlob, startByte, endByte);\n\n        if (sliced === null) {\n          return null;\n        }\n\n        return new FbsBlob(sliced);\n      } else {\n        var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n        return new FbsBlob(slice, true);\n      }\n    }\n  }, {\n    key: \"uploadData\",\n    value: function uploadData() {\n      return this.data_;\n    }\n  }], [{\n    key: \"getBlob\",\n    value: function getBlob() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      if (isNativeBlobDefined()) {\n        var blobby = args.map(function (val) {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        });\n        return new FbsBlob(getBlob$1.apply(null, blobby));\n      } else {\n        var uint8Arrays = args.map(function (val) {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return val.data_;\n          }\n        });\n        var finalLength = 0;\n        uint8Arrays.forEach(function (array) {\n          finalLength += array.byteLength;\n        });\n        var merged = new Uint8Array(finalLength);\n        var index = 0;\n        uint8Arrays.forEach(function (array) {\n          for (var i = 0; i < array.length; i++) {\n            merged[index++] = array[i];\n          }\n        });\n        return new FbsBlob(merged, true);\n      }\n    }\n  }]);\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n\nvar Mapping = /*#__PURE__*/_createClass(function Mapping(server, local, writable, xform) {\n  _classCallCheck(this, Mapping);\n\n  this.server = server;\n  this.local = local || server;\n  this.writable = !!writable;\n  this.xform = xform || noXform_;\n});\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString, host, protocol) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart, host, protocol);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    var _iterator = _createForOfIteratorHelper(resource[PREFIXES_KEY]),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var path = _step.value;\n        var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n\n        var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n\n        listResult.prefixes.push(reference);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    var _iterator2 = _createForOfIteratorHelper(resource[ITEMS_KEY]),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var item = _step2.value;\n\n        var _reference = service._makeStorageReference(new Location(bucket, item['name']));\n\n        listResult.items.push(_reference);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */\n\n\nvar RequestInfo = /*#__PURE__*/_createClass(function RequestInfo(url, method,\n/**\r\n * Returns the value with which to resolve the request's promise. Only called\r\n * if the request is successful. Throw from this function to reject the\r\n * returned Request's promise with the thrown error.\r\n * Note: The XhrIo passed to this function may be reused after this callback\r\n * returns. Do not keep a reference to it in any way.\r\n */\nhandler, timeout) {\n  _classCallCheck(this, RequestInfo);\n\n  this.url = url;\n  this.method = method;\n  this.handler = handler;\n  this.timeout = timeout;\n  this.urlParams = {};\n  this.headers = {};\n  this.body = null;\n  this.errorHandler = null;\n  /**\r\n   * Called with the current number of bytes uploaded and total size (-1 if not\r\n   * computable) of the request body (i.e. used to report upload progress).\r\n   */\n\n  this.progressCallback = null;\n  this.successCodes = [200];\n  this.additionalRetryCodes = [];\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text, service.host, service._protocol);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      if ( // This exact message string is the only consistent part of the\n      // server's error response that identifies it as an App Check error.\n      xhr.getErrorText().includes('Firebase App Check token is invalid')) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata$2(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host, service._protocol);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart, service.host, service._protocol);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getBytes$1(service, location, maxDownloadSizeBytes) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, function (_, data) {\n    return data;\n  }, timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n\n  if (maxDownloadSizeBytes !== undefined) {\n    requestInfo.headers['Range'] = \"bytes=0-\".concat(maxDownloadSizeBytes);\n    requestInfo.successCodes = [200\n    /* OK */\n    , 206\n    /* Partial Content */\n    ];\n  }\n\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host, service._protocol);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata$2(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host, service._protocol);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject$2(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host, service._protocol);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\n\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host, service._protocol);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\n\n\nvar ResumableUploadStatus = /*#__PURE__*/_createClass(function ResumableUploadStatus(current, total, finalized, metadata) {\n  _classCallCheck(this, ResumableUploadStatus);\n\n  this.current = current;\n  this.total = total;\n  this.finalized = !!finalized;\n  this.metadata = metadata || null;\n});\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host, service._protocol);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': \"\".concat(blob.size()),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': \"\".concat(status_.current)\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */\n\n\nvar TaskEvent = {\n  /**\r\n   * For this event,\r\n   * <ul>\r\n   *   <li>The `next` function is triggered on progress updates and when the\r\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n   *       argument.</li>\r\n   *   <li>The `error` function is triggered if the upload is canceled or fails\r\n   *       for another reason.</li>\r\n   *   <li>The `complete` function is triggered if the upload completes\r\n   *       successfully.</li>\r\n   * </ul>\r\n   */\n  STATE_CHANGED: 'state_changed'\n}; // type keys = keyof TaskState\n\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */\n\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case \"running\"\n    /* RUNNING */\n    :\n    case \"pausing\"\n    /* PAUSING */\n    :\n    case \"canceling\"\n    /* CANCELING */\n    :\n      return TaskState.RUNNING;\n\n    case \"paused\"\n    /* PAUSED */\n    :\n      return TaskState.PAUSED;\n\n    case \"success\"\n    /* SUCCESS */\n    :\n      return TaskState.SUCCESS;\n\n    case \"canceled\"\n    /* CANCELED */\n    :\n      return TaskState.CANCELED;\n\n    case \"error\"\n    /* ERROR */\n    :\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Observer = /*#__PURE__*/_createClass(function Observer(nextOrObserver, error, complete) {\n  _classCallCheck(this, Observer);\n\n  var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n\n  if (asFunctions) {\n    this.next = nextOrObserver;\n    this.error = error !== null && error !== void 0 ? error : undefined;\n    this.complete = complete !== null && complete !== void 0 ? complete : undefined;\n  } else {\n    var observer = nextOrObserver;\n    this.next = observer.next;\n    this.error = observer.error;\n    this.complete = observer.complete;\n  }\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    for (var _len5 = arguments.length, argsToForward = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      argsToForward[_key5] = arguments[_key5];\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** An override for the text-based Connection. Used in tests. */\n\n\nvar textFactoryOverride = null;\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\n\nvar XhrConnection = /*#__PURE__*/function () {\n  function XhrConnection() {\n    var _this4 = this;\n\n    _classCallCheck(this, XhrConnection);\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.initXhr();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this4.xhr_.addEventListener('abort', function () {\n        _this4.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n\n      _this4.xhr_.addEventListener('error', function () {\n        _this4.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n\n      _this4.xhr_.addEventListener('load', function () {\n        resolve();\n      });\n    });\n  }\n\n  _createClass(XhrConnection, [{\n    key: \"send\",\n    value: function send(url, method, body, headers) {\n      if (this.sent_) {\n        throw internalError('cannot .send() more than once');\n      }\n\n      this.sent_ = true;\n      this.xhr_.open(method, url, true);\n\n      if (headers !== undefined) {\n        for (var key in headers) {\n          if (headers.hasOwnProperty(key)) {\n            this.xhr_.setRequestHeader(key, headers[key].toString());\n          }\n        }\n      }\n\n      if (body !== undefined) {\n        this.xhr_.send(body);\n      } else {\n        this.xhr_.send();\n      }\n\n      return this.sendPromise_;\n    }\n  }, {\n    key: \"getErrorCode\",\n    value: function getErrorCode() {\n      if (!this.sent_) {\n        throw internalError('cannot .getErrorCode() before sending');\n      }\n\n      return this.errorCode_;\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      if (!this.sent_) {\n        throw internalError('cannot .getStatus() before sending');\n      }\n\n      try {\n        return this.xhr_.status;\n      } catch (e) {\n        return -1;\n      }\n    }\n  }, {\n    key: \"getResponse\",\n    value: function getResponse() {\n      if (!this.sent_) {\n        throw internalError('cannot .getResponse() before sending');\n      }\n\n      return this.xhr_.response;\n    }\n  }, {\n    key: \"getErrorText\",\n    value: function getErrorText() {\n      if (!this.sent_) {\n        throw internalError('cannot .getErrorText() before sending');\n      }\n\n      return this.xhr_.statusText;\n    }\n    /** Aborts the request. */\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.xhr_.abort();\n    }\n  }, {\n    key: \"getResponseHeader\",\n    value: function getResponseHeader(header) {\n      return this.xhr_.getResponseHeader(header);\n    }\n  }, {\n    key: \"addUploadProgressListener\",\n    value: function addUploadProgressListener(listener) {\n      if (this.xhr_.upload != null) {\n        this.xhr_.upload.addEventListener('progress', listener);\n      }\n    }\n  }, {\n    key: \"removeUploadProgressListener\",\n    value: function removeUploadProgressListener(listener) {\n      if (this.xhr_.upload != null) {\n        this.xhr_.upload.removeEventListener('progress', listener);\n      }\n    }\n  }]);\n\n  return XhrConnection;\n}();\n\nvar XhrTextConnection = /*#__PURE__*/function (_XhrConnection) {\n  _inherits(XhrTextConnection, _XhrConnection);\n\n  var _super2 = _createSuper(XhrTextConnection);\n\n  function XhrTextConnection() {\n    _classCallCheck(this, XhrTextConnection);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(XhrTextConnection, [{\n    key: \"initXhr\",\n    value: function initXhr() {\n      this.xhr_.responseType = 'text';\n    }\n  }]);\n\n  return XhrTextConnection;\n}(XhrConnection);\n\nfunction newTextConnection() {\n  return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\n}\n\nvar XhrBytesConnection = /*#__PURE__*/function (_XhrConnection2) {\n  _inherits(XhrBytesConnection, _XhrConnection2);\n\n  var _super3 = _createSuper(XhrBytesConnection);\n\n  function XhrBytesConnection() {\n    _classCallCheck(this, XhrBytesConnection);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(XhrBytesConnection, [{\n    key: \"initXhr\",\n    value: function initXhr() {\n      this.xhr_.responseType = 'arraybuffer';\n    }\n  }]);\n\n  return XhrBytesConnection;\n}(XhrConnection);\n\nfunction newBytesConnection() {\n  return new XhrBytesConnection();\n}\n\nvar XhrBlobConnection = /*#__PURE__*/function (_XhrConnection3) {\n  _inherits(XhrBlobConnection, _XhrConnection3);\n\n  var _super4 = _createSuper(XhrBlobConnection);\n\n  function XhrBlobConnection() {\n    _classCallCheck(this, XhrBlobConnection);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(XhrBlobConnection, [{\n    key: \"initXhr\",\n    value: function initXhr() {\n      this.xhr_.responseType = 'blob';\n    }\n  }]);\n\n  return XhrBlobConnection;\n}(XhrConnection);\n\nfunction newBlobConnection() {\n  return new XhrBlobConnection();\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\n\n\nvar UploadTask = /*#__PURE__*/function () {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  function UploadTask(ref, blob) {\n    var _this5 = this;\n\n    var metadata = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, UploadTask);\n\n    /**\r\n     * Number of bytes transferred so far.\r\n     */\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = \"running\"\n    /* RUNNING */\n    ;\n\n    this._errorHandler = function (error) {\n      _this5._request = undefined;\n      _this5._chunkMultiplier = 1;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this5._needToFetchStatus = true;\n\n        _this5.completeTransitions_();\n      } else {\n        _this5._error = error;\n\n        _this5._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._metadataErrorHandler = function (error) {\n      _this5._request = undefined;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this5.completeTransitions_();\n      } else {\n        _this5._error = error;\n\n        _this5._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._promise = new Promise(function (resolve, reject) {\n      _this5._resolve = resolve;\n      _this5._reject = reject;\n\n      _this5._start();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this._promise.then(null, function () {});\n  }\n\n  _createClass(UploadTask, [{\n    key: \"_makeProgressCallback\",\n    value: function _makeProgressCallback() {\n      var _this6 = this;\n\n      var sizeBefore = this._transferred;\n      return function (loaded) {\n        return _this6._updateProgress(sizeBefore + loaded);\n      };\n    }\n  }, {\n    key: \"_shouldDoResumable\",\n    value: function _shouldDoResumable(blob) {\n      return blob.size() > 256 * 1024;\n    }\n  }, {\n    key: \"_start\",\n    value: function _start() {\n      if (this._state !== \"running\"\n      /* RUNNING */\n      ) {\n        // This can happen if someone pauses us in a resume callback, for example.\n        return;\n      }\n\n      if (this._request !== undefined) {\n        return;\n      }\n\n      if (this._resumable) {\n        if (this._uploadUrl === undefined) {\n          this._createResumable();\n        } else {\n          if (this._needToFetchStatus) {\n            this._fetchStatus();\n          } else {\n            if (this._needToFetchMetadata) {\n              // Happens if we miss the metadata on upload completion.\n              this._fetchMetadata();\n            } else {\n              this._continueUpload();\n            }\n          }\n        }\n      } else {\n        this._oneShotUpload();\n      }\n    }\n  }, {\n    key: \"_resolveToken\",\n    value: function _resolveToken(callback) {\n      var _this7 = this;\n\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      Promise.all([this._ref.storage._getAuthToken(), this._ref.storage._getAppCheckToken()]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            authToken = _ref2[0],\n            appCheckToken = _ref2[1];\n\n        switch (_this7._state) {\n          case \"running\"\n          /* RUNNING */\n          :\n            callback(authToken, appCheckToken);\n            break;\n\n          case \"canceling\"\n          /* CANCELING */\n          :\n            _this7._transition(\"canceled\"\n            /* CANCELED */\n            );\n\n            break;\n\n          case \"pausing\"\n          /* PAUSING */\n          :\n            _this7._transition(\"paused\"\n            /* PAUSED */\n            );\n\n            break;\n        }\n      });\n    } // TODO(andysoto): assert false\n\n  }, {\n    key: \"_createResumable\",\n    value: function _createResumable() {\n      var _this8 = this;\n\n      this._resolveToken(function (authToken, appCheckToken) {\n        var requestInfo = createResumableUpload(_this8._ref.storage, _this8._ref._location, _this8._mappings, _this8._blob, _this8._metadata);\n\n        var createRequest = _this8._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n        _this8._request = createRequest;\n        createRequest.getPromise().then(function (url) {\n          _this8._request = undefined;\n          _this8._uploadUrl = url;\n          _this8._needToFetchStatus = false;\n\n          _this8.completeTransitions_();\n        }, _this8._errorHandler);\n      });\n    }\n  }, {\n    key: \"_fetchStatus\",\n    value: function _fetchStatus() {\n      var _this9 = this;\n\n      // TODO(andysoto): assert(this.uploadUrl_ !== null);\n      var url = this._uploadUrl;\n\n      this._resolveToken(function (authToken, appCheckToken) {\n        var requestInfo = getResumableUploadStatus(_this9._ref.storage, _this9._ref._location, url, _this9._blob);\n\n        var statusRequest = _this9._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n        _this9._request = statusRequest;\n        statusRequest.getPromise().then(function (status) {\n          status = status;\n          _this9._request = undefined;\n\n          _this9._updateProgress(status.current);\n\n          _this9._needToFetchStatus = false;\n\n          if (status.finalized) {\n            _this9._needToFetchMetadata = true;\n          }\n\n          _this9.completeTransitions_();\n        }, _this9._errorHandler);\n      });\n    }\n  }, {\n    key: \"_continueUpload\",\n    value: function _continueUpload() {\n      var _this10 = this;\n\n      var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n      var status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n      var url = this._uploadUrl;\n\n      this._resolveToken(function (authToken, appCheckToken) {\n        var requestInfo;\n\n        try {\n          requestInfo = continueResumableUpload(_this10._ref._location, _this10._ref.storage, url, _this10._blob, chunkSize, _this10._mappings, status, _this10._makeProgressCallback());\n        } catch (e) {\n          _this10._error = e;\n\n          _this10._transition(\"error\"\n          /* ERROR */\n          );\n\n          return;\n        }\n\n        var uploadRequest = _this10._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n        _this10._request = uploadRequest;\n        uploadRequest.getPromise().then(function (newStatus) {\n          _this10._increaseMultiplier();\n\n          _this10._request = undefined;\n\n          _this10._updateProgress(newStatus.current);\n\n          if (newStatus.finalized) {\n            _this10._metadata = newStatus.metadata;\n\n            _this10._transition(\"success\"\n            /* SUCCESS */\n            );\n          } else {\n            _this10.completeTransitions_();\n          }\n        }, _this10._errorHandler);\n      });\n    }\n  }, {\n    key: \"_increaseMultiplier\",\n    value: function _increaseMultiplier() {\n      var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier; // Max chunk size is 32M.\n\n      if (currentSize < 32 * 1024 * 1024) {\n        this._chunkMultiplier *= 2;\n      }\n    }\n  }, {\n    key: \"_fetchMetadata\",\n    value: function _fetchMetadata() {\n      var _this11 = this;\n\n      this._resolveToken(function (authToken, appCheckToken) {\n        var requestInfo = getMetadata$2(_this11._ref.storage, _this11._ref._location, _this11._mappings);\n\n        var metadataRequest = _this11._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n        _this11._request = metadataRequest;\n        metadataRequest.getPromise().then(function (metadata) {\n          _this11._request = undefined;\n          _this11._metadata = metadata;\n\n          _this11._transition(\"success\"\n          /* SUCCESS */\n          );\n        }, _this11._metadataErrorHandler);\n      });\n    }\n  }, {\n    key: \"_oneShotUpload\",\n    value: function _oneShotUpload() {\n      var _this12 = this;\n\n      this._resolveToken(function (authToken, appCheckToken) {\n        var requestInfo = multipartUpload(_this12._ref.storage, _this12._ref._location, _this12._mappings, _this12._blob, _this12._metadata);\n\n        var multipartRequest = _this12._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\n\n        _this12._request = multipartRequest;\n        multipartRequest.getPromise().then(function (metadata) {\n          _this12._request = undefined;\n          _this12._metadata = metadata;\n\n          _this12._updateProgress(_this12._blob.size());\n\n          _this12._transition(\"success\"\n          /* SUCCESS */\n          );\n        }, _this12._errorHandler);\n      });\n    }\n  }, {\n    key: \"_updateProgress\",\n    value: function _updateProgress(transferred) {\n      var old = this._transferred;\n      this._transferred = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n      // partial upload not completed by server, after which the \"transferred\"\n      // value may reset to the value at the beginning of the request).\n\n      if (this._transferred !== old) {\n        this._notifyObservers();\n      }\n    }\n  }, {\n    key: \"_transition\",\n    value: function _transition(state) {\n      if (this._state === state) {\n        return;\n      }\n\n      switch (state) {\n        case \"canceling\"\n        /* CANCELING */\n        :\n          // TODO(andysoto):\n          // assert(this.state_ === InternalTaskState.RUNNING ||\n          //        this.state_ === InternalTaskState.PAUSING);\n          this._state = state;\n\n          if (this._request !== undefined) {\n            this._request.cancel();\n          }\n\n          break;\n\n        case \"pausing\"\n        /* PAUSING */\n        :\n          // TODO(andysoto):\n          // assert(this.state_ === InternalTaskState.RUNNING);\n          this._state = state;\n\n          if (this._request !== undefined) {\n            this._request.cancel();\n          }\n\n          break;\n\n        case \"running\"\n        /* RUNNING */\n        :\n          // TODO(andysoto):\n          // assert(this.state_ === InternalTaskState.PAUSED ||\n          //        this.state_ === InternalTaskState.PAUSING);\n          var wasPaused = this._state === \"paused\"\n          /* PAUSED */\n          ;\n          this._state = state;\n\n          if (wasPaused) {\n            this._notifyObservers();\n\n            this._start();\n          }\n\n          break;\n\n        case \"paused\"\n        /* PAUSED */\n        :\n          // TODO(andysoto):\n          // assert(this.state_ === InternalTaskState.PAUSING);\n          this._state = state;\n\n          this._notifyObservers();\n\n          break;\n\n        case \"canceled\"\n        /* CANCELED */\n        :\n          // TODO(andysoto):\n          // assert(this.state_ === InternalTaskState.PAUSED ||\n          //        this.state_ === InternalTaskState.CANCELING);\n          this._error = canceled();\n          this._state = state;\n\n          this._notifyObservers();\n\n          break;\n\n        case \"error\"\n        /* ERROR */\n        :\n          // TODO(andysoto):\n          // assert(this.state_ === InternalTaskState.RUNNING ||\n          //        this.state_ === InternalTaskState.PAUSING ||\n          //        this.state_ === InternalTaskState.CANCELING);\n          this._state = state;\n\n          this._notifyObservers();\n\n          break;\n\n        case \"success\"\n        /* SUCCESS */\n        :\n          // TODO(andysoto):\n          // assert(this.state_ === InternalTaskState.RUNNING ||\n          //        this.state_ === InternalTaskState.PAUSING ||\n          //        this.state_ === InternalTaskState.CANCELING);\n          this._state = state;\n\n          this._notifyObservers();\n\n          break;\n      }\n    }\n  }, {\n    key: \"completeTransitions_\",\n    value: function completeTransitions_() {\n      switch (this._state) {\n        case \"pausing\"\n        /* PAUSING */\n        :\n          this._transition(\"paused\"\n          /* PAUSED */\n          );\n\n          break;\n\n        case \"canceling\"\n        /* CANCELING */\n        :\n          this._transition(\"canceled\"\n          /* CANCELED */\n          );\n\n          break;\n\n        case \"running\"\n        /* RUNNING */\n        :\n          this._start();\n\n          break;\n      }\n    }\n    /**\r\n     * A snapshot of the current task state.\r\n     */\n\n  }, {\n    key: \"snapshot\",\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this._state);\n      return {\n        bytesTransferred: this._transferred,\n        totalBytes: this._blob.size(),\n        state: externalState,\n        metadata: this._metadata,\n        task: this,\n        ref: this._ref\n      };\n    }\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `StorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(type, nextOrObserver, error, completed) {\n      var _this13 = this;\n\n      var observer = new Observer(nextOrObserver || undefined, error || undefined, completed || undefined);\n\n      this._addObserver(observer);\n\n      return function () {\n        _this13._removeObserver(observer);\n      };\n    }\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\n\n  }, {\n    key: \"then\",\n    value: function then(onFulfilled, onRejected) {\n      // These casts are needed so that TypeScript can infer the types of the\n      // resulting Promise.\n      return this._promise.then(onFulfilled, onRejected);\n    }\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\n\n  }, {\n    key: \"catch\",\n    value: function _catch(onRejected) {\n      return this.then(null, onRejected);\n    }\n    /**\r\n     * Adds the given observer.\r\n     */\n\n  }, {\n    key: \"_addObserver\",\n    value: function _addObserver(observer) {\n      this._observers.push(observer);\n\n      this._notifyObserver(observer);\n    }\n    /**\r\n     * Removes the given observer.\r\n     */\n\n  }, {\n    key: \"_removeObserver\",\n    value: function _removeObserver(observer) {\n      var i = this._observers.indexOf(observer);\n\n      if (i !== -1) {\n        this._observers.splice(i, 1);\n      }\n    }\n  }, {\n    key: \"_notifyObservers\",\n    value: function _notifyObservers() {\n      var _this14 = this;\n\n      this._finishPromise();\n\n      var observers = this._observers.slice();\n\n      observers.forEach(function (observer) {\n        _this14._notifyObserver(observer);\n      });\n    }\n  }, {\n    key: \"_finishPromise\",\n    value: function _finishPromise() {\n      if (this._resolve !== undefined) {\n        var triggered = true;\n\n        switch (taskStateFromInternalTaskState(this._state)) {\n          case TaskState.SUCCESS:\n            async(this._resolve.bind(null, this.snapshot))();\n            break;\n\n          case TaskState.CANCELED:\n          case TaskState.ERROR:\n            var toCall = this._reject;\n            async(toCall.bind(null, this._error))();\n            break;\n\n          default:\n            triggered = false;\n            break;\n        }\n\n        if (triggered) {\n          this._resolve = undefined;\n          this._reject = undefined;\n        }\n      }\n    }\n  }, {\n    key: \"_notifyObserver\",\n    value: function _notifyObserver(observer) {\n      var externalState = taskStateFromInternalTaskState(this._state);\n\n      switch (externalState) {\n        case TaskState.RUNNING:\n        case TaskState.PAUSED:\n          if (observer.next) {\n            async(observer.next.bind(observer, this.snapshot))();\n          }\n\n          break;\n\n        case TaskState.SUCCESS:\n          if (observer.complete) {\n            async(observer.complete.bind(observer))();\n          }\n\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          if (observer.error) {\n            async(observer.error.bind(observer, this._error))();\n          }\n\n          break;\n\n        default:\n          // TODO(andysoto): assert(false);\n          if (observer.error) {\n            async(observer.error.bind(observer, this._error))();\n          }\n\n      }\n    }\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      var valid = this._state === \"paused\"\n      /* PAUSED */\n      || this._state === \"pausing\"\n      /* PAUSING */\n      ;\n\n      if (valid) {\n        this._transition(\"running\"\n        /* RUNNING */\n        );\n      }\n\n      return valid;\n    }\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var valid = this._state === \"running\"\n      /* RUNNING */\n      ;\n\n      if (valid) {\n        this._transition(\"pausing\"\n        /* PAUSING */\n        );\n      }\n\n      return valid;\n    }\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var valid = this._state === \"running\"\n      /* RUNNING */\n      || this._state === \"pausing\"\n      /* PAUSING */\n      ;\n\n      if (valid) {\n        this._transition(\"canceling\"\n        /* CANCELING */\n        );\n      }\n\n      return valid;\n    }\n  }]);\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference = /*#__PURE__*/function () {\n  function Reference(_service, location) {\n    _classCallCheck(this, Reference);\n\n    this._service = _service;\n\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n  /**\r\n   * Returns the URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  _createClass(Reference, [{\n    key: \"toString\",\n    value: function toString() {\n      return 'gs://' + this._location.bucket + '/' + this._location.path;\n    }\n  }, {\n    key: \"_newRef\",\n    value: function _newRef(service, location) {\n      return new Reference(service, location);\n    }\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      var location = new Location(this._location.bucket, '');\n      return this._newRef(this._service, location);\n    }\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\n\n  }, {\n    key: \"bucket\",\n    get: function get() {\n      return this._location.bucket;\n    }\n    /**\r\n     * The full path of this object.\r\n     */\n\n  }, {\n    key: \"fullPath\",\n    get: function get() {\n      return this._location.path;\n    }\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\n\n  }, {\n    key: \"name\",\n    get: function get() {\n      return lastComponent(this._location.path);\n    }\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\n\n  }, {\n    key: \"storage\",\n    get: function get() {\n      return this._service;\n    }\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var newPath = parent(this._location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this._location.bucket, newPath);\n      return new Reference(this._service, location);\n    }\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\n\n  }, {\n    key: \"_throwIfRoot\",\n    value: function _throwIfRoot(name) {\n      if (this._location.path === '') {\n        throw invalidRootOperation(name);\n      }\n    }\n  }]);\n\n  return Reference;\n}();\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */\n\n\nfunction getBytesInternal(ref, maxDownloadSizeBytes) {\n  ref._throwIfRoot('getBytes');\n\n  var requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\n  return ref.storage.makeRequestWithTokens(requestInfo, newBytesConnection).then(function (bytes) {\n    return maxDownloadSizeBytes !== undefined ? // GCS may not honor the Range header for small files\n    bytes.slice(0, maxDownloadSizeBytes) : bytes;\n  });\n}\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */\n\n\nfunction getBlobInternal(ref, maxDownloadSizeBytes) {\n  ref._throwIfRoot('getBlob');\n\n  var requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\n  return ref.storage.makeRequestWithTokens(requestInfo, newBlobConnection).then(function (blob) {\n    return maxDownloadSizeBytes !== undefined ? // GCS may not honor the Range header for small files\n    blob.slice(0, maxDownloadSizeBytes) : blob;\n  });\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadBytes$1(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytes');\n\n  var requestInfo = multipartUpload(ref.storage, ref._location, getMappings(), new FbsBlob(data, true), metadata);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection).then(function (finalMetadata) {\n    return {\n      metadata: finalMetadata,\n      ref: ref\n    };\n  });\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable$1(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytesResumable');\n\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadString$1(ref, value) {\n  var format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : StringFormat.RAW;\n  var metadata = arguments.length > 3 ? arguments[3] : undefined;\n\n  ref._throwIfRoot('uploadString');\n\n  var data = dataFromString(format, value);\n  var metadataClone = Object.assign({}, metadata);\n\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType;\n  }\n\n  return uploadBytes$1(ref, data.data, metadataClone);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll$1(ref) {\n  var accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(function () {\n    return accumulator;\n  });\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\n\n\nfunction listAllHelper(_x, _x2, _x3) {\n  return _listAllHelper.apply(this, arguments);\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction _listAllHelper() {\n  _listAllHelper = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ref, accumulator, pageToken) {\n    var _accumulator$prefixes, _accumulator$items;\n\n    var opt, nextPage;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            opt = {\n              // maxResults is 1000 by default.\n              pageToken: pageToken\n            };\n            _context4.next = 3;\n            return list$1(ref, opt);\n\n          case 3:\n            nextPage = _context4.sent;\n\n            (_accumulator$prefixes = accumulator.prefixes).push.apply(_accumulator$prefixes, _toConsumableArray(nextPage.prefixes));\n\n            (_accumulator$items = accumulator.items).push.apply(_accumulator$items, _toConsumableArray(nextPage.items));\n\n            if (!(nextPage.nextPageToken != null)) {\n              _context4.next = 9;\n              break;\n            }\n\n            _context4.next = 9;\n            return listAllHelper(ref, accumulator, nextPage.nextPageToken);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _listAllHelper.apply(this, arguments);\n}\n\nfunction list$1(ref, options) {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber('options.maxResults',\n      /* minValue= */\n      1,\n      /* maxValue= */\n      1000, options.maxResults);\n    }\n  }\n\n  var op = options || {};\n  var requestInfo = list$2(ref.storage, ref._location,\n  /*delimiter= */\n  '/', op.pageToken, op.maxResults);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata$1(ref) {\n  ref._throwIfRoot('getMetadata');\n\n  var requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\n\n\nfunction updateMetadata$1(ref, metadata) {\n  ref._throwIfRoot('updateMetadata');\n\n  var requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL$1(ref) {\n  ref._throwIfRoot('getDownloadURL');\n\n  var requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection).then(function (url) {\n    if (url === null) {\n      throw noDownloadURL();\n    }\n\n    return url;\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$1(ref) {\n  ref._throwIfRoot('deleteObject');\n\n  var requestInfo = deleteObject$2(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\n\n\nfunction _getChild$1(ref, childPath) {\n  var newPath = child(ref._location.path, childPath);\n  var location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\n\n\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\n\n\nfunction refFromPath(ref, path) {\n  if (ref instanceof FirebaseStorageImpl) {\n    var service = ref;\n\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n\n    var reference = new Reference(service, service._bucket);\n\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild$1(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\nfunction ref$1(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(host, config) {\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n  if (bucketString == null) {\n    return null;\n  }\n\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nfunction connectStorageEmulator$1(storage, host, port) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  storage.host = \"\".concat(host, \":\").concat(port);\n  storage._protocol = 'http';\n  var mockUserToken = options.mockUserToken;\n\n  if (mockUserToken) {\n    storage._overrideAuthToken = typeof mockUserToken === 'string' ? mockUserToken : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */\n\n\nvar FirebaseStorageImpl = /*#__PURE__*/function () {\n  function FirebaseStorageImpl(\n  /**\r\n   * FirebaseApp associated with this StorageService instance.\r\n   */\n  app, _authProvider,\n  /**\r\n   * @internal\r\n   */\n  _appCheckProvider,\n  /**\r\n   * @internal\r\n   */\n  _url, _firebaseVersion) {\n    _classCallCheck(this, FirebaseStorageImpl);\n\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._appCheckProvider = _appCheckProvider;\n    this._url = _url;\n    this._firebaseVersion = _firebaseVersion;\n    this._bucket = null;\n    /**\r\n     * This string can be in the formats:\r\n     * - host\r\n     * - host:port\r\n     */\n\n    this._host = DEFAULT_HOST;\n    this._protocol = 'https';\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n  /**\r\n   * The host string for this service, in the form of `host` or\r\n   * `host:port`.\r\n   */\n\n\n  _createClass(FirebaseStorageImpl, [{\n    key: \"host\",\n    get: function get() {\n      return this._host;\n    },\n    set: function set(host) {\n      this._host = host;\n\n      if (this._url != null) {\n        this._bucket = Location.makeFromBucketSpec(this._url, host);\n      } else {\n        this._bucket = extractBucket(host, this.app.options);\n      }\n    }\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\n\n  }, {\n    key: \"maxUploadRetryTime\",\n    get: function get() {\n      return this._maxUploadRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxUploadRetryTime = time;\n    }\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\n\n  }, {\n    key: \"maxOperationRetryTime\",\n    get: function get() {\n      return this._maxOperationRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxOperationRetryTime = time;\n    }\n  }, {\n    key: \"_getAuthToken\",\n    value: function () {\n      var _getAuthToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var auth, tokenData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._overrideAuthToken) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._overrideAuthToken);\n\n              case 2:\n                auth = this._authProvider.getImmediate({\n                  optional: true\n                });\n\n                if (!auth) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 6;\n                return auth.getToken();\n\n              case 6:\n                tokenData = _context.sent;\n\n                if (!(tokenData !== null)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", tokenData.accessToken);\n\n              case 9:\n                return _context.abrupt(\"return\", null);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _getAuthToken() {\n        return _getAuthToken2.apply(this, arguments);\n      }\n\n      return _getAuthToken;\n    }()\n  }, {\n    key: \"_getAppCheckToken\",\n    value: function () {\n      var _getAppCheckToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var appCheck, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                appCheck = this._appCheckProvider.getImmediate({\n                  optional: true\n                });\n\n                if (!appCheck) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                _context2.next = 4;\n                return appCheck.getToken();\n\n              case 4:\n                result = _context2.sent;\n                return _context2.abrupt(\"return\", result.token);\n\n              case 6:\n                return _context2.abrupt(\"return\", null);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _getAppCheckToken() {\n        return _getAppCheckToken2.apply(this, arguments);\n      }\n\n      return _getAppCheckToken;\n    }()\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\n\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      if (!this._deleted) {\n        this._deleted = true;\n\n        this._requests.forEach(function (request) {\n          return request.cancel();\n        });\n\n        this._requests.clear();\n      }\n\n      return Promise.resolve();\n    }\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\n\n  }, {\n    key: \"_makeStorageReference\",\n    value: function _makeStorageReference(loc) {\n      return new Reference(this, loc);\n    }\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\n\n  }, {\n    key: \"_makeRequest\",\n    value: function _makeRequest(requestInfo, requestFactory, authToken, appCheckToken) {\n      var _this15 = this;\n\n      if (!this._deleted) {\n        var request = makeRequest(requestInfo, this._appId, authToken, appCheckToken, requestFactory, this._firebaseVersion);\n\n        this._requests.add(request); // Request removes itself from set when complete.\n\n\n        request.getPromise().then(function () {\n          return _this15._requests.delete(request);\n        }, function () {\n          return _this15._requests.delete(request);\n        });\n        return request;\n      } else {\n        return new FailRequest(appDeleted());\n      }\n    }\n  }, {\n    key: \"makeRequestWithTokens\",\n    value: function () {\n      var _makeRequestWithTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(requestInfo, requestFactory) {\n        var _yield$Promise$all, _yield$Promise$all2, authToken, appCheckToken;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Promise.all([this._getAuthToken(), this._getAppCheckToken()]);\n\n              case 2:\n                _yield$Promise$all = _context3.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                authToken = _yield$Promise$all2[0];\n                appCheckToken = _yield$Promise$all2[1];\n                return _context3.abrupt(\"return\", this._makeRequest(requestInfo, requestFactory, authToken, appCheckToken).getPromise());\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function makeRequestWithTokens(_x4, _x5) {\n        return _makeRequestWithTokens.apply(this, arguments);\n      }\n\n      return makeRequestWithTokens;\n    }()\n  }]);\n\n  return FirebaseStorageImpl;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.9.0\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */\n\nfunction getBytes(ref, maxDownloadSizeBytes) {\n  ref = getModularInstance(ref);\n  return getBytesInternal(ref, maxDownloadSizeBytes);\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadBytes(ref, data, metadata) {\n  ref = getModularInstance(ref);\n  return uploadBytes$1(ref, data, metadata);\n}\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\n\n\nfunction uploadString(ref, value, format, metadata) {\n  ref = getModularInstance(ref);\n  return uploadString$1(ref, value, format, metadata);\n}\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable(ref, data, metadata) {\n  ref = getModularInstance(ref);\n  return uploadBytesResumable$1(ref, data, metadata);\n}\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\n\n\nfunction getMetadata(ref) {\n  ref = getModularInstance(ref);\n  return getMetadata$1(ref);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\n\n\nfunction updateMetadata(ref, metadata) {\n  ref = getModularInstance(ref);\n  return updateMetadata$1(ref, metadata);\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list(ref, options) {\n  ref = getModularInstance(ref);\n  return list$1(ref, options);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll(ref) {\n  ref = getModularInstance(ref);\n  return listAll$1(ref);\n}\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL(ref) {\n  ref = getModularInstance(ref);\n  return getDownloadURL$1(ref);\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject(ref) {\n  ref = getModularInstance(ref);\n  return deleteObject$1(ref);\n}\n\nfunction ref(serviceOrRef, pathOrUrl) {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return ref$1(serviceOrRef, pathOrUrl);\n}\n/**\r\n * @internal\r\n */\n\n\nfunction _getChild(ref, childPath) {\n  return _getChild$1(ref, childPath);\n}\n/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */\n\n\nfunction getStorage() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  var bucketUrl = arguments.length > 1 ? arguments[1] : undefined;\n  app = getModularInstance(app);\n\n  var storageProvider = _getProvider(app, STORAGE_TYPE);\n\n  var storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */\n\n\nfunction connectStorageEmulator(storage, host, port) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  connectStorageEmulator$1(storage, host, port, options);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */\n\n\nfunction getBlob(ref, maxDownloadSizeBytes) {\n  ref = getModularInstance(ref);\n  return getBlobInternal(ref, maxDownloadSizeBytes);\n}\n/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */\n\n\nfunction getStream(ref, maxDownloadSizeBytes) {\n  throw new Error('getStream() is only supported by NodeJS builds');\n}\n/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */\n\n\nfunction factory(container, _ref3) {\n  var url = _ref3.instanceIdentifier;\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  var appCheckProvider = container.getProvider('app-check-internal');\n  return new FirebaseStorageImpl(app, authProvider, appCheckProvider, url, SDK_VERSION);\n}\n\nfunction registerStorage() {\n  _registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setMultipleInstances(true)); //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n\n\n  registerVersion(name, version, ''); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\n  registerVersion(name, version, 'esm2017');\n}\n\nregisterStorage();\nexport { StringFormat, FbsBlob as _FbsBlob, Location as _Location, TaskEvent as _TaskEvent, TaskState as _TaskState, UploadTask as _UploadTask, dataFromString as _dataFromString, _getChild, invalidArgument as _invalidArgument, invalidRootOperation as _invalidRootOperation, connectStorageEmulator, deleteObject, getBlob, getBytes, getDownloadURL, getMetadata, getStorage, getStream, list, listAll, ref, updateMetadata, uploadBytes, uploadBytesResumable, uploadString };","var config = {\n    apiKey: \"AIzaSyDbbvMpHagiUbg2pLkKTeth-nty3V8NlNY\",\n    authDomain: \"plas-5k.firebaseapp.com\",\n    projectId: \"plas-5k\",\n    storageBucket: \"plas-5k.appspot.com\",\n    messagingSenderId: \"782699338239\",\n    appId: \"1:782699338239:web:f4b6d7df3d420edbab6fca\",\n    measurementId: \"G-S2H6N0NXZV\"\n  };\n\nexport default config;"],"names":["getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","concat","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","GridRoot","styled","name","overridesResolver","props","styles","_props$ownerState","ownerState","container","item","lg","md","sm","xl","xs","zeroMinWidth","root","_ref6","boxSizing","display","flexWrap","width","margin","minWidth","_ref","theme","directionValues","values","breakpoints","propValue","output","flexDirection","indexOf","maxWidth","_ref2","rowSpacing","rowSpacingValues","themeSpacing","marginTop","paddingTop","_ref4","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","_ref7","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","Object","assign","up","generateGrid","inProps","ref","element","themeProps","useThemeProps","extendSxProp","className","columnsProp","columnSpacingProp","_props$component","component","_props$container","_props$direction","_props$item","_props$lg","_props$md","rowSpacingProp","_props$sm","_props$spacing","_props$wrap","_props$xl","_props$xs","_props$zeroMinWidth","other","columnsContext","classes","slots","composeClasses","useUtilityClasses","as","value","children","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","DEFAULT_HOST","StorageError","_FirebaseError","_super","code","message","_this","prependCode","customData","serverResponse","_baseMessage","setPrototypeOf","key","get","set","unknown","canceled","invalidArgument","appDeleted","internalError","ErrorCode","Location","bucket","path","path_","length","encode","encodeURIComponent","bucketString","host","bucketLocation","makeFromUrl","url","location","bucketDomain","gsRegex","RegExp","httpModify","loc","decodeURIComponent","firebaseStorageHost","groups","regex","indices","postModify","charAt","slice","i","group","captures","exec","bucketValue","pathValue","invalidUrl","FailRequest","error","promise_","Promise","reject","isString","p","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","hasOwnProperty","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","_this2","pendingConnection_","backoffId_","canceled_","appDelete_","resolve","resolve_","reject_","start_","_this3","backoffDone","requestWentThrough","status","connection","wasSuccessCode","getResponse","err","getErrorText","RequestEndStatus","f","callback","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","_len","args","Array","_key","callWithDelay","millis","setTimeout","handler","clearGlobalTimeout","clearTimeout","success","_len2","_key2","waitMillis","random","stopped","stop","wasTimeout","start","backoffCallback","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","then","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","isRetryStatusCode_","successCode","wasCanceled","ABORT","appDelete","abort","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","jsonObjectOrNull","s","obj","JSON","isArray","lastComponent","index","lastIndexOf","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","push","nameMapping","_metadata","fullPath","xformPath","sizeMapping","undefined","Number","fromResource","service","resource","len","mapping","defineProperty","_makeStorageReference","addRef","fromResourceString","resourceString","RequestInfo","method","urlParams","headers","body","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","downloadUrlHandler","xhr","text","tokens","split","token","alt","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","XhrConnection","_this4","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","toString","response","statusText","header","getResponseHeader","listener","upload","removeEventListener","XhrTextConnection","_XhrConnection","_super2","responseType","newTextConnection","Reference","_service","_location","_newRef","newPath","invalidRootOperation","getDownloadURL$1","_throwIfRoot","requestInfo","fullServerUrl","maxOperationRetryTime","getDownloadUrl","storage","makeRequestWithTokens","_getChild$1","childPath","canonicalChildPath","filter","join","child","refFromPath","FirebaseStorageImpl","_bucket","reference","ref$1","serviceOrRef","pathOrUrl","test","extractBucket","config","makeFromBucketSpec","app","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","options","_makeRequestWithTokens","_getAppCheckToken2","_getAuthToken2","time","POSITIVE_INFINITY","_callee","auth","tokenData","_context","prev","next","_overrideAuthToken","abrupt","getImmediate","optional","getToken","sent","accessToken","_callee2","appCheck","_context2","forEach","request","cancel","clear","requestFactory","authToken","appCheckToken","_this15","appId","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","add","getPromise","delete","_callee3","_yield$Promise$all","_yield$Promise$all2","_context3","all","_getAuthToken","_getAppCheckToken","_makeRequest","_x4","_x5","version","STORAGE_TYPE","getDownloadURL","getStorage","bucketUrl","storageProvider","storageInstance","identifier","factory","_ref3","instanceIdentifier","getProvider","authProvider","appCheckProvider","setMultipleInstances","apiKey","authDomain","projectId","storageBucket","messagingSenderId","measurementId"],"sourceRoot":""}