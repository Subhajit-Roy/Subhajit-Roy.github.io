{"version":3,"sources":["webpack:///./src/pages/pdf1.js"],"names":["window","require","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","version","Pdf1","props","state","width","height","pageNumber","maxPage","updateDimensions","innerWidth","this","setState","update_width","update_height","Math","round","componentDidMount","addEventListener","bind","componentWillUnmount","removeEventListener","nextPage","prevPage","onPDFLoad","render","style","margin","marginTop","title","className","display","onClick","file","gate","onContextMenu","e","preventDefault","onLoadSuccess","pdf","numPages","renderMode","Component"],"mappings":"qPACA,GAAI,oBAAOA,OAAyB,KAAD,EACDC,EAAQ,QADP,EAC1BC,SAD0B,EAChBC,KADgB,EACVC,MAWzBA,MAAMC,oBAAoBC,UAA1B,2CAA+EF,MAAMG,QAArF,iB,IAwDqBC,E,YACjB,WAAYC,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACXC,MAAQ,IACRC,OAAQ,IACRC,WAAY,EACZC,QAAS,IANI,E,4CAajBC,iBAAA,WACE,GAAI,oBAAOf,OACX,GAAGA,OAAOgB,WAAa,IACrBC,KAAKC,SAAS,CAAEP,MAAO,IAAKC,OAAQ,UAC/B,CACL,IAAIO,EAAgBnB,OAAOgB,WAAW,IAClCI,EAAgBC,KAAKC,MAAMH,EAAa,KAC5CF,KAAKC,SAAS,CAAEP,MAAOQ,EAAcP,OAAQQ,M,EAQjDG,kBAAA,WACEN,KAAKF,mBACD,oBAAOf,QACXA,OAAOwB,iBAAiB,SAAUP,KAAKF,iBAAiBU,KAAKR,Q,EAO/DS,qBAAA,WACM,oBAAO1B,QACXA,OAAO2B,oBAAoB,SAAUV,KAAKF,iBAAiBU,KAAKR,Q,EAIlEW,SAAA,WACaX,KAAKP,MAAMG,aAAeI,KAAKP,MAAMI,SACpCG,KAAKC,SAAS,CAACL,WAAWI,KAAKP,MAAMG,WAAW,K,EAI5DgB,SAAA,WACqC,IAA1BZ,KAAKP,MAAMG,YACVI,KAAKC,SAAS,CAACL,WAAWI,KAAKP,MAAMG,WAAW,K,EAI5DiB,UAAA,SAAU3B,GACNc,KAAKC,SAAS,CAACJ,QAAQX,K,EAI7B4B,OAAA,WAAS,IAAD,OACJ,OACE,oCACH,yBACOC,MAAO,CACLC,OAAO,SAGLC,UAAW,QAEf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,4BAEX,yBAAKC,UAAU,SAASJ,MAAO,CAACK,QAAS,SACrC,kBAAC,IAAD,CAAQC,QAAS,kBAAI,EAAKT,YAAYO,UAAU,mBAAhD,aAA6EnB,KAAKP,MAAMG,WAAW,GACnG,4BAAKI,KAAKP,MAAMG,WAAhB,OAAgCI,KAAKP,MAAMI,SAC3C,kBAAC,IAAD,CAAQwB,QAAS,kBAAI,EAAKV,YAAYQ,UAAU,mBAAhD,UAA2EnB,KAAKP,MAAMG,WAAW,IAErG,yBAAKmB,MAAO,CAACK,QAAS,SACtB,kBAACnC,SAAD,CAAUqC,KAAMC,IAAMC,cAAe,SAACC,GAAD,OAAOA,EAAEC,kBAAkBP,UAAU,eAAeQ,cAAe,SAACC,GAAD,OAAO,EAAKf,UAAUe,EAAIC,WAAWC,WAAW,WACpJ,kBAAC5C,KAAD,CAAMU,WAAYI,KAAKP,MAAMG,WAAYF,MAAOM,KAAKP,MAAMC,UAG/D,yBAAKqB,MAAO,CAACK,QAAQ,SACjB,kBAAC,IAAD,CAAQC,QAAS,kBAAI,EAAKV,YAAYQ,UAAU,cAAhD,IAA8D,0C,GAtFpDY,c","file":"component---src-pages-pdf-1-js-1e9ca4a8593cc91cc87f.js","sourcesContent":["import React from \"react\"\nif (typeof window !== `undefined`) {\n  const {Document, Page, pdfjs} = require('react-pdf')\n}\n\n// import {Document, Page, pdfjs} from \"react-pdf\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport gate from \"../../public/storage/pdf/GATE/Bio2020.pdf\"\nimport \"./pdftest.css\"\nimport {Button} from \"bootstrap-react\"\nimport { Component } from \"react\"\n\npdfjs.GlobalWorkerOptions.workerSrc=`//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n\n// export default function Pdf1(){\n//     if (typeof window !== `undefined`) {\n//     const [widthUpdate] = useWindowSize({fps:60});\n//         setWidth(width);\n//     }\n//     const [width,setWidth] = useState(850);\n//     const [pageNumber,setPageNumber] = useState(1);\n//     const [maxPage,setMaxPage] = useState(20);\n//     function nextPage(){\n//         if(pageNumber !== maxPage){\n//             setPageNumber(pageNumber+1);\n//         }\n//     }\n//     function prevPage(){\n//         if(pageNumber !== 1){\n//             setPageNumber(pageNumber-1);\n//         }\n//     }\n//     function onPDFLoad(Page){\n//         setMaxPage(Page);\n//     }\n\n//     return(\n//         <>\n//         <div\n//     style={{\n//     //   margin: `0 auto`,\n//         maxWidth: 960,\n//         padding: `0 1.0875rem 1.45rem`,\n//         marginTop: '4em',\n//     }}>\n//     <Layout>\n//         <SEO title=\"GATE Biotechnology 2020\" />           \n\n//         <div className=\"button\" style={{display: \"flex\"}}>\n//             <Button onClick={()=>prevPage()} className=\"prevButton mr-3\">Previous  {pageNumber-1}</Button>\n//             <h3>{pageNumber} of {maxPage}</h3>\n//             <Button onClick={()=>nextPage()} className=\"nextButton ml-3\" >Next   {pageNumber+1}</Button>    \n//         </div>\n//         <div style={{display: \"flex\" ,minWidth: \"100%\"}}>\n//         <Document file={gate} onContextMenu={(e) => e.preventDefault()} className=\"pdf-document\" onLoadSuccess={(pdf)=>onPDFLoad(pdf.numPages)} renderMode=\"canvas`\">\n//             <Page pageNumber={pageNumber} width={width}/>\n//         </Document>\n//         </div>\n//         <div style={{display:\"flex\"}}>\n//             <Button onClick={()=>nextPage()} className=\"buttonLast\"> <h2>Next</h2></Button>\n//         </div>\n//     </Layout>\n// </div>\n// </>\n//     );\n// }\n\nexport default class Pdf1 extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          width:  800,\n          height: 182,\n          pageNumber: 1,\n          maxPage: 30,\n        }\n      }\n    \n      /**\n       * Calculate & Update state of new dimensions\n       */\n      updateDimensions() {\n        if (typeof window !== `undefined`) {\n        if(window.innerWidth < 500) {\n          this.setState({ width: 450, height: 102 });\n        } else {\n          let update_width  = window.innerWidth-100;\n          let update_height = Math.round(update_width/4.4);\n          this.setState({ width: update_width, height: update_height });\n        }\n      }\n      }\n    \n      /**\n       * Add event listener\n       */\n      componentDidMount() {\n        this.updateDimensions();\n        if (typeof window !== `undefined`) {\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n      }\n    }\n    \n      /**\n       * Remove event listener\n       */\n      componentWillUnmount() {\n        if (typeof window !== `undefined`) {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n        }\n      }\n\n      nextPage(){\n                if(this.state.pageNumber !== this.state.maxPage){\n                    this.setState({pageNumber:this.state.pageNumber+1})\n                    // setPageNumber(pageNumber+1);\n                }\n            }\n        prevPage(){\n                if(this.state.pageNumber !== 1){\n                    this.setState({pageNumber:this.state.pageNumber-1})\n                    // setPageNumber(pageNumber-1);\n                }\n            }\n        onPDFLoad(Page){\n            this.setState({maxPage:Page})\n                // setMaxPage(Page);\n            }\n\n      render(){\n          return(\n            <>\n         <div\n                style={{\n                  margin: `0 auto`,\n                    // maxWidth: 960,\n                    // padding: `0 1.0875rem 1.45rem`,\n                    marginTop: '4em',\n                }}>\n                <Layout>\n                    <SEO title=\"GATE Biotechnology 2020\" />           \n            \n                    <div className=\"button\" style={{display: \"flex\"}}>\n                        <Button onClick={()=>this.prevPage()} className=\"prevButton mr-3\">Previous  {this.state.pageNumber-1}</Button>\n                        <h3>{this.state.pageNumber} of {this.state.maxPage}</h3>\n                        <Button onClick={()=>this.nextPage()} className=\"nextButton ml-3\" >Next   {this.state.pageNumber+1}</Button>    \n                    </div>\n                    <div style={{display: \"flex\"}}>\n                    <Document file={gate} onContextMenu={(e) => e.preventDefault()} className=\"pdf-document\" onLoadSuccess={(pdf)=>this.onPDFLoad(pdf.numPages)} renderMode=\"canvas`\">\n                        <Page pageNumber={this.state.pageNumber} width={this.state.width}/>\n                    </Document>\n                    </div>\n                    <div style={{display:\"flex\"}}>\n                        <Button onClick={()=>this.nextPage()} className=\"buttonLast\"> <h2>Next</h2></Button>\n                    </div>\n                </Layout>\n            </div>\n            </>\n          )\n      }\n}"],"sourceRoot":""}