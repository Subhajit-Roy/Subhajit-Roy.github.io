{"version":3,"file":"component---src-pages-database-js-00f9769d84a5e3449425.js","mappings":"mSA0Be,SAASA,IA4DpB,OAA8BC,EAAAA,EAAAA,UAAS,GAAhCC,EAAP,KAAgBC,EAAhB,KACA,GAAiCF,EAAAA,EAAAA,UAAS,GAAnCG,EAAP,KAAkBC,EAAlB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAGN,GAAqB,oBAAXC,OACN,KAAMC,GAAKC,EAAAA,EAAAA,eAAcC,EAAAA,IACZC,EAAAA,EAAAA,IAAQH,OAKzB,gCACI,gBAAC,IAAD,KACI,+CAEJ,uBAAKI,GAAG,OAAOC,UAAU,kBACrB,uBAAKA,UAAU,aACX,0BAAQA,UAAU,SACd,+CACA,4HAEJ,+BAGA,gBAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,eAAe,SAASC,WAAW,SAASC,UAAU,UAC9E,gBAAC,KAAD,CAAMC,MAAI,IAEV,gBAAC,KAAD,CAAMA,MAAI,GAAV,0DAC2D,gBAAC,IAAD,CAAQC,QAAS,YAzFhG,WACI,GAAqB,oBAAXb,OAAuB,CACjC,IAAMc,GAAUC,EAAAA,EAAAA,OAChBC,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,IAAIH,EAAS,oCAAoCI,MAAK,SAACC,GAClEC,QAAQC,IAAIF,GACZG,GAAAA,CAAM,CACFC,IAAKJ,EACLK,OAAQ,MACRC,aAAc,OACdC,mBAAoB,SAACC,GACjB7B,EAAa8B,KAAKC,MAA4B,IAArBF,EAAcG,OAAYH,EAAcI,WAEtEb,MAAK,SAACc,GACL,IAAMT,EAAMvB,OAAOiC,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,EAASI,QACpDC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOjB,EACZc,EAAKI,aAAa,WAAY,kBAC9BH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,eAuEoFC,KAAtB,QAD3D,IAEKhD,EAAW,GACZ,uBAAKiD,MAAO,CAACC,YAAY,SAAzB,aAA6ClD,EAA7C,MAGJ,gBAAC,KAAD,CAAMe,MAAI,GAAV,8DAC+D,gBAAC,IAAD,CAAQC,QAAS,YAxEpG,WACI,GAAqB,oBAAXb,OAAuB,CAC7B,IAAMc,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,IAAIH,EAAS,8BAA8BI,MAAK,SAACC,GAY5DC,QAAQC,IAAIF,GACZG,GAAAA,CAAM,CACFC,IAAKJ,EACLK,OAAQ,MACRC,aAAc,OACdC,mBAAoB,SAACC,GACjB/B,EAAYgC,KAAKC,MAA4B,IAArBF,EAAcG,OAAYH,EAAcI,WAErEb,MAAK,SAACc,GACL,IAAMT,EAAMvB,OAAOiC,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,EAASI,QACpDC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOjB,EACZc,EAAKI,aAAa,WAAY,aAC9BH,SAASI,KAAKC,YAAYN,GAC1BA,EAAKO,eA0CoFI,KAAtB,QAD/D,IAEKrD,EAAU,GACX,uBAAKmD,MAAO,CAACC,YAAY,SAAzB,aAA6CpD,EAA7C,KAEA,2BALJ,iDAQA,gBAAC,KAAD,yCACqC,gBAAC,EAAAsD,KAAD,CAAMC,GAAG,eAAT","sources":["webpack://gatsby-starter-default/./src/pages/database.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link, navigate } from \"gatsby\"\nimport { Button, Grid } from \"@mui/material\";\nimport config from \"../service/fireconf\"\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\n// import \"../database/5000_final.csv\" as csvdata;\nimport { getDownloadURL, getStorage, ref } from \"firebase/storage\";\nimport axios from \"axios\";\n\n\nfunction LogOut(){\n    const auth = getAuth()\n    signOut(auth).then(()=>{\n        navigate(\"/app/auth\");\n        alert(\"Sign Out success\");\n    }).catch((error)=>{\n        alert(\"Error message: \",error.message)\n    })\n}\n\n\n\n\n\nexport default function Profile(){\n    function DownCSV(){\n        if(typeof window !== \"undefined\"){\n        const storage = getStorage();\n        getDownloadURL(ref(storage, 'PLAS-5k/database/5000_final.csv')).then((urlt)=>{\n            console.log(urlt);\n            axios({\n                url: urlt,\n                method: 'GET',\n                responseType: 'blob', // important\n                onDownloadProgress: (progressEvent)=>{\n                    setProgress2(Math.round((progressEvent.loaded*100)/progressEvent.total))\n                },\n            }).then((response) => {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', '5000_final.csv');\n                document.body.appendChild(link);\n                link.click();\n              });\n        })\n        }\n    }\n    function DownPDB(){\n        if(typeof window !== \"undefined\"){\n            const storage = getStorage();\n            // trackPromise(\n            getDownloadURL(ref(storage, 'PLAS-5k/database/input.7z')).then((urlt)=>{\n                // const downloadFile= () =>{window.location.href=urlt};\n                // return(<button onClick={downloadFile} download/>)\n    \n                // const xhr = new XMLHttpRequest();\n                // xhr.responseType = 'blob';\n                // xhr.onload = (event) => {\n                // const blob = xhr.response;\n                // };\n                // xhr.open('GET', urlt);\n                // xhr.send();\n    \n                console.log(urlt);\n                axios({\n                    url: urlt,\n                    method: 'GET',\n                    responseType: 'blob', // important\n                    onDownloadProgress: (progressEvent)=>{\n                        setProgress(Math.round((progressEvent.loaded*100)/progressEvent.total))\n                    },\n                }).then((response) => {\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', 'allPDB.7z');\n                    document.body.appendChild(link);\n                    link.click();\n                  });\n            })\n            // );\n        }\n    }\n    const [progress,setProgress] =useState(0);\n    const [progress2, setProgress2] =useState(0);\n    // const [binding, setBinding] = useState(require(\"/blank.csv\"));\n    useEffect(()=>{\n        // const cors = require('cors')\n        // app.use(cors())\n        if(typeof window !== 'undefined'){\n            const app =initializeApp(config);\n            const auth = getAuth(app);\n        }\n    })\n\n    return(\n        <>\n            <Helmet>\n                <title>PLAS: Profile</title>\n            </Helmet>\n            <div id=\"main\" className=\"wrapper style1\">\n                <div className=\"container\">\n                    <header className=\"major\">\n                        <h2>Download Database</h2>\n                        <h5>The energatic components can be optained as a csv file and the initial structure as PDB file.</h5>\n                    </header>\n                    <section>\n                            \n\n                    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" direction=\"column\">\n                        <Grid item>\n                        </Grid>\n                        <Grid item>\n                            Please download all the data as a csv file by clicking <Button onClick={()=>{DownCSV()}}>here</Button>.\n                            {progress2 >1 &&\n                            <div style={{paddingLeft:'1rem'}}>Progress: {progress2}%</div>\n                            }\n                        </Grid>\n                        <Grid item>\n                            To download all the initial structures in pdb format click <Button onClick={()=>{DownPDB()}}>here</Button>.\n                            {progress >1 &&\n                            <div style={{paddingLeft:'1rem'}}>Progress: {progress}%</div>\n                            }\n                            <br/>\n                            The above is a open 7z file with no password.\n                        </Grid>\n                        <Grid>\n                            Wish to view the structure click <Link to=\"/app/viewer\">here.</Link>\n                        </Grid>\n                    </Grid>\n                    </section>\n                </div>\n            </div>\n        </>\n    );\n}"],"names":["Profile","useState","progress","setProgress","progress2","setProgress2","useEffect","window","app","initializeApp","config","getAuth","id","className","container","spacing","justifyContent","alignItems","direction","item","onClick","storage","getStorage","getDownloadURL","ref","then","urlt","console","log","axios","url","method","responseType","onDownloadProgress","progressEvent","Math","round","loaded","total","response","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","DownCSV","style","paddingLeft","DownPDB","Link","to"],"sourceRoot":""}