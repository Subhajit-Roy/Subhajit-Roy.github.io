{"version":3,"file":"component---src-pages-app-js-8d30ad0e17fa903a2e5d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/privateRoute.js","webpack://gatsby-starter-default/./src/components/auth.js","webpack://gatsby-starter-default/./src/components/viewer.js","webpack://gatsby-starter-default/./src/components/profile.js","webpack://gatsby-starter-default/./src/components/standardRoute.js","webpack://gatsby-starter-default/./src/pages/app.js"],"sourcesContent":["import { getAuth } from \"firebase/auth\";\nimport React from \"react\";\nimport config from \"../service/fireconf\";\n// import * as firebase from 'firebase/app';\nimport { navigate } from \"@reach/router\";\nimport { initializeApp } from \"firebase/app\"\n\n\n\n\n\nexport default function PrivateRoute({component:Component,location, ...rest}){\n  if (typeof window !== 'undefined') {\n    const app =initializeApp(config);\n    const auth = getAuth(app);\n    const user = auth.currentUser;\n    if(!user && location.pathname !=='/app/auth'){\n        navigate('/app/auth')\n        return null\n    }else{\n      return <Component {...rest}/>\n    }\n  }\n}","import { Button, Checkbox, Grid, Icon, styled, Tab, Tabs, TextField, Typography } from \"@mui/material\"\nimport { Box } from '@mui/system'\nimport React, { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet'\nimport Layout from '../components/layout'\nimport PropTypes from 'prop-types';\nimport config from \"../service/fireconf\"\nimport { getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,sendEmailVerification, onAuthStateChanged, updateProfile } from 'firebase/auth';\nimport { Link, navigate } from \"gatsby\"\nimport { initializeApp } from \"firebase/app\"\n// import \"./auth.css\"\n\n\nif (typeof window !== 'undefined') {\n  initializeApp(config);\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\n\nconst SubhoTextField = styled((props)=>(\n  <TextField InputProps ={{disableUnderline: true}}{...props}/>\n))(({theme})=>({\n  '& .MuiInputBase-root':{\n    color: 'white',\n    borderColor: '#1C1D26',\n    border: 1,\n    justifyContent: 'center',\n  },\n  '& .MuiInput-root':{\n    border: 1,\n    color:'white',\n    borderColor: '#1C1D26'\n  },\n  '& MuiInputBase-input':{\n    border:1,\n    color: 'white',\n    borderColor: '#1C1D26'\n  },\n  '& .MuiInputLabel-root':{\n    color:'white',\n    borderColor: '#1C1D26'\n  },\n  '& ..MuiFormControl-root':{\n    borderColor: '#1C1D26'\n  }\n}))\n\n\n\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction LogIn(username,password){\n  if(typeof window !== 'undefined'){\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, username, password)\n    .then((userCredential) => {\n      const user = userCredential.user;\n      console.log(user);\n      navigate('/app/profile')\n    })\n    .catch((error) => {\n      // const errorCode = error.code;\n      const errorMessage = error.message;\n      alert(\"Error:\",errorMessage);\n    });\n  }\n}\n\nfunction SignUp(username,password,name,uni){\n  if(typeof window !== 'undefined'){\n    var auth = getAuth();\n    createUserWithEmailAndPassword(auth,username,password).then((user)=>{\n      console.log(user.user);\n      updateProfile(auth.currentUser,{\n        displayName:name,\n        photoURL:uni\n      })\n      signInWithEmailAndPassword(auth, username, password).then((user)=>{\n        console.log(\"Signed In after sign Up\");\n        sendEmailVerification(auth.currentUser).then(()=>{\n          console.log(\"Verification mail sent.\");\n          alert(\"Verification Email sent\");\n          navigate('/app/profile');\n        })\n      })\n    }).catch((error)=>{\n      console.log(\"Error Code:\",error.code);\n      console.log(\"Error Message:\", error.message);\n    })\n  }\n\n}\n\nexport default function Auth(props){\n  // const {classes} = props;\n  const [value, setValue] = React.useState(0);\n  const [username,setUsername]= useState(\"\");\n  const [password,setPassword]=useState(\"\");\n  const [name,setName] = useState(\"\");\n  const [uni,setUni] = useState(\"\");\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  }\n  useEffect(()=>{\n    if(typeof window !== 'undefined'){\n      const app =initializeApp(config);\n      const auth = getAuth(app);\n      onAuthStateChanged(auth, (user)=>{\n          if(user){\n              navigate(\"/app/profile\")\n          }else{\n            console.log(\"Scope to login In\")\n          }\n      })\n    }\n  })\n  return(\n    <Layout>\n    <Helmet>\n      <title>PLAS: Authentication</title>\n      <meta name=\"description\" content=\"Elements Page\" />\n    </Helmet>\n\n    <div id=\"main\" className=\"wrapper style1\">\n      <div className=\"container\">\n        <header className=\"major\">\n          <h2>Log In / Sign Up</h2>\n        </header>\n\n        <section>\n\n          <div className=\"Auth Tab\">\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n              <Grid item xs=\"auto\">\n                <Box sx={{width: 'auto', bgcolor: 'background.paper'}}>\n                  <Tabs centered value={value} onChange={handleChange} textColor=\"white\">\n                    <Tab label=\"Sign In\" {...a11yProps(0)} />\n                    <Tab label=\"Sign Up\" {...a11yProps(1)}/>\n                  </Tabs>\n                  <TabPanel value={value} index={0}>\n                    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" direction=\"column\">\n                      <Grid item xs=\"auto\">\n                        <h3 style={{display: 'flex', justifyContent: 'center', alignItems: 'center', fontWeight: 'bolder'}}>Log In</h3>\n                      </Grid>\n                      <Grid item>\n                        <SubhoTextField className=\"Email\" variant=\"standard\" label=\"E-mail\" onChange={(user)=>{setUsername(user.target.value)}} noborder \n                        style={{fontDisplay: 'white', display: 'flex', justifyContent: 'center',}}\n                        color=\"secondary\" \n                        />\n                      </Grid>\n                      <Grid item>\n                        <SubhoTextField className=\"Password\" type=\"password\" label=\"Password\" variant=\"standard\" onChange={(user)=>{setPassword(user.target.value)}} noborder\n                        style={{fontDisplay: 'white', display: 'flex', justifyContent: 'center',}}\n                        color=\"secondary\" \n                        />\n                      </Grid>\n                      <Grid item>\n                        <Grid container>\n                          <Grid item spacing={2}>\n                            <Button variant=\"contained\" endIcon={<Icon>login</Icon>} onClick={()=>{LogIn(username,password)}}>Sign IN</Button>\n                          </Grid>\n                          <Grid item spacing={2}>\n                            <Button varient =\"Outlined\" color=\"secondary\" startIcon={<Icon color=\"primary\">delet_forever</Icon>}>Reset</Button>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item>\n                        <h4 style={{paddingTop: '3rem'}}>Third Party Authentication</h4>\n                      </Grid>\n                      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" direction='row' alignContent=\"center\">\n                        <Grid item xs=\"auto\">\n                          <Icon fontSize=\"large\">facebook_rounded</Icon>\n                        </Grid>\n\n                        {/* <Grid item xs=\"auto\"> */}\n                          {/* <Icon fontSize=\"large\">google_icon</Icon> */}\n                          {/* <img src={pic} style={{maxWidth: '50h'}}/> */}\n                        {/* </Grid> */}\n\n\n                      </Grid>\n                    </Grid>\n                  </TabPanel>\n                  <TabPanel value={value} index={1}>\n                  <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" direction=\"column\">\n                      <Grid item xs=\"auto\">\n                        <h3 style={{display: 'flex', justifyContent: 'center', alignItems: 'center', fontWeight: 'bolder'}}>Sign Up</h3>\n                      </Grid>\n                      <Grid item>\n                        <SubhoTextField className=\"Name\" variant=\"standard\" label=\"Name\" onChange={(data)=>{setName(data.target.value)}} noborder \n                        style={{fontDisplay: 'white', display: 'flex', justifyContent: 'center',}}\n                        color=\"secondary\" \n                        />\n                      </Grid>\n                      <Grid item>\n                        <SubhoTextField className=\"University\" variant=\"standard\" label=\"University\" onChange={(data)=>{setUni(data.target.value)}} noborder \n                        style={{fontDisplay: 'white', display: 'flex', justifyContent: 'center',}}\n                        color=\"secondary\" \n                        />\n                      </Grid>\n                      <Grid item>\n                        <SubhoTextField className=\"Email\" variant=\"standard\" label=\"E-mail\" onChange={(user)=>{setUsername(user.target.value)}} noborder \n                        style={{fontDisplay: 'white', display: 'flex', justifyContent: 'center',}}\n                        color=\"secondary\" \n                        />\n                      </Grid>\n                      <Grid item>\n                        <SubhoTextField className=\"Password\" type=\"password\" label=\"Password\" onChange={(user)=>{setPassword(user.target.value)}}\n                        style={{fontDisplay: 'white', display: 'flex', justifyContent: 'center',}}\n                        color=\"secondary\" variant=\"standard\"\n                        />\n                      </Grid>\n                      <Grid item>\n                        {/* <FormGroup>\n                          <FormControlLabel control={<Checkbox defaultChecked />} label={<div>I agree to the <Link to=\"/tc\">terms and condition</Link> </div>}/>\n                        </FormGroup> */}\n                        <Checkbox defaultChecked disabled sx={{\n                          '&.MuiButtonBase-root': {\n                            color: \"#E44C65\",\n                          },\n                        }}/> I agree to the <Link to=\"/tc\">terms and condition</Link>.\n                        \n                      </Grid>\n                      <Grid item>\n                        <Checkbox defaultChecked disabled sx={{\n                          '&.MuiButtonBase-root': {\n                            color: \"#E44C65\",\n                          },\n                        }}/> I agree to the <Link to=\"/license\">liscence agreement.</Link>\n                      </Grid>\n                      <Grid item>\n                        <Grid container>\n                          <Grid item spacing={2}>\n                            <Button variant=\"contained\" endIcon={<Icon>login</Icon>} onClick={()=>{SignUp(username,password,name,uni)}}>Sign UP</Button>\n                          </Grid>\n                          <Grid item spacing={2}>\n                            <Button varient =\"Outlined\" color=\"secondary\" startIcon={<Icon color=\"primary\">delet_forever</Icon>}>Reset</Button>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      <Grid item>\n                        <h4 style={{paddingTop: '3rem'}}>Third Party Authentication</h4>\n                      </Grid>\n                      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" direction='row' alignContent=\"center\">\n                        <Grid item xs=\"auto\">\n                          <Icon fontSize=\"large\">facebook_rounded</Icon>\n                        </Grid>\n\n                        {/* <Grid item xs=\"auto\"> */}\n                          {/* <Icon fontSize=\"large\">google_icon</Icon> */}\n                          {/* <img src={pic} style={{maxWidth: '50%'}}/> */}\n                        {/* </Grid> */} \n\n\n                      </Grid>\n                    </Grid>\n                  </TabPanel>\n                </Box>\n              </Grid>\n            </Grid>\n          </div>\n\n\n        </section>\n      </div>\n    </div>\n  </Layout>\n  );\n}\n\n\n// const Elements = props => (\n  \n// )\n\n// export default Elements\n","import * as React from \"react\"\n// import { Link } from \"gatsby\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n\n// import Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Helmet } from \"react-helmet\"\nimport { Stage, StructureComponent } from \"react-ngl\"\nimport { Autocomplete, Checkbox, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\"\nimport finalData from '../database/plas5k.json'\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { navigate } from \"gatsby\"\nimport { useEffect} from \"react\";\nimport config from \"../service/fireconf\"\n// import MathJax from \"react-mathjax\";\nimport { getDownloadURL, getStorage, ref } from \"firebase/storage\";\n\n\n\n\nexport default function IndexPage(){\n  // function ObtainJSON(){\n  //   if(typeof window !== 'undefined'){\n  //     const storage = getStorage();\n  //     getDownloadURL(ref(storage, \"PLAS-5k/database/plas5k.json\")).then((url)=>{\n  //       fetch(url).then((response)=>response.json()).then((responseJSON)=>{\n  //         setFinalData(responseJSON); \n  //         // console.log(responseJSON[0])\n  //       });\n  //     }).catch((error)=>{\n  //       alert(\"Error in obtainint JSON\");\n  //     })\n  //   }\n  // }\n\n\n  useEffect(()=>{\n    if(typeof window !== 'undefined'){\n        const app =initializeApp(config);\n        const auth = getAuth(app);\n        onAuthStateChanged(auth, (user)=>{\n            if(!user){\n                navigate(\"/auth\")\n            }else{\n                // console.log(user.email);\n                // ObtainJSON();\n            }\n        })\n    }\n})\n  const reprList = React.useMemo(() => ({\n    'backgroundColor':\"white\",\n    'ball+stick': [{\n      type: 'ball+stick',\n      param:{\n        color:'bfactor'\n      }\n    }],\n    cartoon: [{\n      type: 'cartoon',\n      param:{\n        color:'atomindex'\n      }\n    }],\n    'ribbon and line': [{\n      type: 'ribbon',\n      param: {\n        color: 'atomindex'\n      }\n    }, {\n      type: 'line',\n      param: {\n        color: 'element'\n      }\n    }],\n    spacefill: [{\n      type: 'spacefill',\n      param: {\n        color: 'element'\n      }\n    }],\n    surface: [{\n      type: 'surface',\n      param: {\n        color: 'element'\n      }\n    }]\n  }), []);\n  const cameraState = React.useMemo(()=>({\n    Reset:{},\n  }),[])\n\n  const [inputValue, setInputValue] = React.useState('');\n  const [index, setIndex] = React.useState('');\n  const [receptorState, setReceptorState]= React.useState(true);\n  const [ligandState, setLigandState]= React.useState(true);\n  const [pdburl,setPdburl] = React.useState(\"\");\n  // const [finalData,setFinalData] = React.useState([]);\n\n  function PdbRequest(newInputValue){\n    if (newInputValue.length !== null && newInputValue.length === 4){\n      // if(typeof window !== 'undefined'){\n      //   const storage = getStorage();\n      //   getDownloadURL(ref(storage, \"PLAS-5k/pdb/\"+inputValue+\".pdb\")).then((url)=>{\n      //     console.log(url)\n      //     setPdburl(url);\n      //   }).catch((error)=>{\n      //     alert(\"Error\",error.message);\n      //   })\n      // }\n      setPdburl(\"/input/\"+newInputValue+\".pdb\");\n      setInputValue(newInputValue);\n      setIndex(finalData.findIndex(obj => obj.pdbid === newInputValue));\n      console.log(index);\n    }\n  }\n\n  return(\n    <>\n    <Seo title=\"Home\" />\n    <Helmet>\n      {/* <script src={withPrefix('ngl.js')} type=\"text/javascript\"/> */}\n    </Helmet>\n    <div style={{}}>\n    <Autocomplete\n      style={{paddingTop: '2rem'}}\n      freeSolo\n      id=\"pdbid\"\n      options={finalData.map((option)=>option.pdbid)}\n      sx={{ width: 300 }}\n      renderInput={(params) => <TextField {...params} label=\"PDB ID\" sx={{\n        '& .MuiInputBase-root':{\n          color: 'white',\n          borderColor: '#1C1D26',\n          justifyContent: 'center',\n        },\n        '& .MuiInput-root':{\n          border: 1,\n          color:'white',\n          borderColor: '#1C1D26'\n        },\n        '& MuiInputBase-input':{\n          color: 'white',\n        },\n        '& .MuiInputLabel-root':{\n          color:'white',\n        },\n        // '& ..MuiFormControl-root':{\n        //   borderColor: '#1C1D26'\n        // }\n      }}/>}\n      onChange={(event,newInputValue)=>PdbRequest(newInputValue)}\n      // sx={{\n      //   '& .MuiAutocomplete-input':{\n      //     backgroundColor:\"white\"\n      //   }\n      // }}\n    />\n    </div>\n    {/* <Stage width=\"600px\" height=\"600px\" cameraState={cameraState}>\n      <Component path={\"/pdb/\"+inputValue+\".pdb\"} reprList={reprList}/>\n    </Stage> */}\n    {\n      inputValue !== '' \n        ? <div id=\"main\" className=\"wrapper style1\">\n          <Grid container spacing={4} direction=\"row\">\n            <Grid item>\n              <Stage width=\"600px\" height=\"600px\" cameraState={cameraState}>\n                <StructureComponent path={\"/ligand/ligand-\"+inputValue+\".pdb\"} reprList={reprList['ball+stick']} selection={ligandState ? 'all' : 'not all'}/>\n                <StructureComponent path={\"/protein/protein-\"+inputValue+\".pdb\"} reprList={reprList['cartoon']} selection={receptorState ? 'all' : 'not all'}/>\n              </Stage>\n            </Grid>\n            <Grid item>\n              <Grid container direction=\"column\">\n                <Grid item>\n                  <h5>Receptor <Checkbox defaultChecked onChange={()=>{setReceptorState(!receptorState)}}/></h5>\n                </Grid>\n                <Grid item>\n                  <h5>Ligand <Checkbox defaultChecked onChange={()=>{setLigandState(!ligandState)}}/></h5>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <TableContainer component={Paper}>\n                <Table>\n                  <TableHead>\n                    <TableCell align=\"left\">{parseFloat(finalData[index]['pdbid']).toFixed(2)}</TableCell>\n                    <TableCell align=\"right\">Energy components(kcal/mol)</TableCell>\n                  </TableHead>\n                  <TableBody>\n                    {/* <TableRow>\n                      <TableCell align=\"left\">Ligand RMSD</TableCell>\n                      <TableCell align=\"right\">{finalData[index]['LigandRmsdMean']} ({finalData[index]['LigandRmsdSd']})</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"left\">Protein RMSD</TableCell>\n                      <TableCell align=\"right\">{finalData[index]['ProteinRmsdMean']} ({finalData[index]['ProteinRmsdSd']})</TableCell>\n                    </TableRow> */}\n                    <TableRow>\n                      <TableCell align=\"left\">Binding Affinity</TableCell>\n                      <TableCell align=\"right\">{parseFloat(finalData[index]['binding_affinity']).toFixed(2)} </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"left\">van der Walls Interaction</TableCell>\n                      <TableCell align=\"right\">{parseFloat(finalData[index]['vdW']).toFixed(2)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"left\">Electrostatic Interaction Energy</TableCell>\n                      <TableCell align=\"right\">{parseFloat(finalData[index]['electrostatic']).toFixed(2)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"left\">Polar Solvational Energy</TableCell>\n                      <TableCell align=\"right\">{parseFloat(finalData[index]['polar_solvation']).toFixed(2)} </TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell align=\"left\">Non-Polar Solvational Energy</TableCell>\n                      <TableCell align=\"right\">{parseFloat(finalData[index]['non_polar_solvation']).toFixed(2)} </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Grid>\n          </Grid>\n          {/* <Grid container spacing=\"auto\" direction=\"column\">\n            <Grid item xs={2}>\n              <h4><b>Binding Affinity:</b> {finalData[index]['di4_DELTA TOTAL_mean']}</h4>\n            </Grid>\n            <Grid item xs={2}>\n              <h4><b>van der Waals Interaction Energy:</b> {finalData[index]['VDW']}</h4>\n            </Grid>\n            <Grid item xs=\"auto\">\n              <h4><b>Electrostatic Interaction Energy</b> {finalData[index]['di4_EEL_mean']}</h4>\n            </Grid>\n            <Grid>\n              <h4><b>Non-Polar Interaction Energy</b> {finalData[index]['di4_EPB_mean']}</h4>\n            </Grid>\n          </Grid> */}\n          </div>\n        : <p></p>\n    }\n  </>\n  );\n}","import React, { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link, navigate } from \"gatsby\"\nimport { Button, Grid } from \"@mui/material\";\nimport config from \"../service/fireconf\"\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\n// import \"../database/5000_final.csv\" as csvdata;\nimport { getDownloadURL, getStorage, ref } from \"firebase/storage\";\nimport axios from \"axios\";\n\n\nfunction LogOut(){\n    const auth = getAuth()\n    signOut(auth).then(()=>{\n        navigate(\"/app/auth\");\n        alert(\"Sign Out success\");\n    }).catch((error)=>{\n        alert(\"Error message: \",error.message)\n    })\n}\n\n\n\n\n\nexport default function Profile(){\n    function DownCSV(){\n        if(typeof window !== \"undefined\"){\n        const storage = getStorage();\n        getDownloadURL(ref(storage, 'PLAS-5k/database/5000_final.csv')).then((urlt)=>{\n            console.log(urlt);\n            axios({\n                url: urlt,\n                method: 'GET',\n                responseType: 'blob', // important\n                onDownloadProgress: (progressEvent)=>{\n                    setProgress2(Math.round((progressEvent.loaded*100)/progressEvent.total))\n                },\n            }).then((response) => {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', '5000_final.csv');\n                document.body.appendChild(link);\n                link.click();\n              });\n        })\n        }\n    }\n    function DownPDB(){\n        if(typeof window !== \"undefined\"){\n            const storage = getStorage();\n            // trackPromise(\n            getDownloadURL(ref(storage, 'PLAS-5k/database/input.7z')).then((urlt)=>{\n                // const downloadFile= () =>{window.location.href=urlt};\n                // return(<button onClick={downloadFile} download/>)\n    \n                // const xhr = new XMLHttpRequest();\n                // xhr.responseType = 'blob';\n                // xhr.onload = (event) => {\n                // const blob = xhr.response;\n                // };\n                // xhr.open('GET', urlt);\n                // xhr.send();\n    \n                console.log(urlt);\n                axios({\n                    url: urlt,\n                    method: 'GET',\n                    responseType: 'blob', // important\n                    onDownloadProgress: (progressEvent)=>{\n                        setProgress(Math.round((progressEvent.loaded*100)/progressEvent.total))\n                    },\n                }).then((response) => {\n                    const url = window.URL.createObjectURL(new Blob([response.data]));\n                    const link = document.createElement('a');\n                    link.href = url;\n                    link.setAttribute('download', 'allPDB.7z');\n                    document.body.appendChild(link);\n                    link.click();\n                  });\n            })\n            // );\n        }\n    }\n    const [name,setName] = useState(\"\");\n    const [uni,setUni] = useState(\"\");\n    const [everify,setEverify] = useState(false);\n    const [sUrl,setSUrl] = useState(\"\");\n    const [progress,setProgress] =useState(0);\n    const [progress2, setProgress2] =useState(0);\n    // const [binding, setBinding] = useState(require(\"/blank.csv\"));\n    useEffect(()=>{\n        // const cors = require('cors')\n        // app.use(cors())\n        if(typeof window !== 'undefined'){\n            const app =initializeApp(config);\n            const auth = getAuth(app);\n            onAuthStateChanged(auth, (user)=>{\n                if(!user){\n                    navigate(\"/app/auth\")\n                }else{\n                    console.log(user.email);\n                    setName(user.displayName)\n                    setUni(user.photoURL);\n                    if(user.emailVerified){\n                        setEverify(true);\n                        // setBinding(require('/bindingFinal.csv'))\n                    }\n                }\n            });\n            // const storage = getStorage;\n            // getDownloadURL(ref(storage, 'PLAS-5k/database/5000_final.csv')).then((url)=>{\n            //     setSUrl(url);\n            //     console.log(url);\n            // }).catch((error)=>{\n            //     alert('Error',error.message);\n            // })\n        }\n    })\n\n    return(\n        <>\n            <Helmet>\n                <title>PLAS: Profile</title>\n            </Helmet>\n            <div id=\"main\" className=\"wrapper style1\">\n                <div className=\"container\">\n                    <header className=\"major\">\n                        <h2>{name}</h2>\n                        <h5>{uni}</h5>\n                    </header>\n                    <section>\n                            \n\n                    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" direction=\"column\">\n                        <Grid item>\n                            {!everify &&\n                            <h3 color=\"red\">Please verify your email first and then refresh the page to gain access to the data and other features.</h3>}\n                        </Grid>\n                        {everify &&\n                        <>\n                        <Grid item>\n                            Please download all the data as a csv file by clicking <Button onClick={()=>{DownCSV()}}>here</Button>.\n                            {progress2 >1 &&\n                            <div style={{paddingLeft:'1rem'}}>Progress: {progress2}%</div>\n                            }\n                        </Grid>\n                        <Grid item>\n                            To download all the initial structures in pdb format click <Button onClick={()=>{DownPDB()}}>here</Button>.\n                            {progress >1 &&\n                            <div style={{paddingLeft:'1rem'}}>Progress: {progress}%</div>\n                            }\n                            <br/>\n                            Password to open the above file is OpenMePLAS5k. The above is a 7z file.\n                        </Grid>\n                        <Grid>\n                            Wish to view the structure click <Link to=\"/app/viewer\">here.</Link>\n                        </Grid>\n                        </>}\n                        <Grid item>\n                            <Button variant=\"contained\" onClick={()=>{LogOut()}}>Sign Out</Button>\n                        </Grid>\n                    </Grid>\n                    </section>\n                </div>\n            </div>\n        </>\n    );\n}","import { getAuth } from \"firebase/auth\";\nimport React from \"react\";\nimport config from \"../service/fireconf\";\n// import * as firebase from 'firebase/app';\nimport { navigate } from \"@reach/router\";\nimport { initializeApp } from \"firebase/app\"\n\n\n\n\n\nexport default function StandardRoute({component:Component,location, ...rest}){\n  if (typeof window !== 'undefined') {\n    const app =initializeApp(config);\n    const auth = getAuth(app);\n    const user = auth.currentUser;\n    if(!user){\n        navigate('/app/auth');\n        return null;\n    }else{\n      return <Component {...rest}/>\n    }\n  }\n}","import React, { useEffect } from 'react';\nimport Layout from '../components/layout';\nimport { navigate } from \"gatsby\";\nimport config from \"../service/fireconf\";\nimport { Router } from \"@reach/router\";\nimport { initializeApp } from \"firebase/app\"\nimport PrivateRoute from \"../components/privateRoute\";\nimport Auth from \"../components/auth\";\nimport Viewer from \"../components/viewer\";\nimport Profile from \"../components/profile\";\nimport { getAuth,createUserWithEmailAndPassword,signInWithEmailAndPassword,sendEmailVerification, onAuthStateChanged, updateProfile } from 'firebase/auth';\nimport StandardRoute from '../components/standardRoute';\n\nexport default function App(){\n    // useEffect =(()=>{\n    // if(typeof window !=='undefined'){\n    //     const app =initializeApp(config);\n    //     const auth = getAuth(app);\n    //     onAuthStateChanged(auth, (user)=>{\n    //         if(user){\n    //             navigate('/app/profile')\n    //         }else{\n    //             navigate('/app/auth')\n    //         }\n    //     })\n    // }});\n\n    return(\n        <Layout>\n            <Router>\n                <PrivateRoute path=\"/app/profile\" component={Profile}/>\n                <StandardRoute path=\"/app/viewer\" component={Viewer}/>\n                <Auth path=\"/app/auth\"/>\n            </Router>\n        </Layout>\n    )\n}"],"names":["PrivateRoute","Component","component","location","rest","window","app","initializeApp","config","getAuth","currentUser","pathname","navigate","TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","p","Typography","SubhoTextField","styled","TextField","InputProps","disableUnderline","theme","color","borderColor","border","justifyContent","a11yProps","Auth","React","setValue","useState","username","setUsername","password","setPassword","name","setName","uni","setUni","useEffect","auth","onAuthStateChanged","user","console","log","Helmet","content","className","Grid","container","spacing","alignItems","item","xs","width","bgcolor","Tabs","centered","onChange","event","newValue","textColor","Tab","label","direction","style","display","fontWeight","variant","target","noborder","fontDisplay","type","Button","endIcon","Icon","onClick","signInWithEmailAndPassword","then","userCredential","catch","error","errorMessage","message","alert","LogIn","varient","startIcon","paddingTop","alignContent","fontSize","data","Checkbox","defaultChecked","disabled","Link","to","createUserWithEmailAndPassword","updateProfile","displayName","photoURL","sendEmailVerification","code","SignUp","IndexPage","reprList","param","cartoon","spacefill","surface","cameraState","Reset","inputValue","setInputValue","setIndex","receptorState","setReceptorState","ligandState","setLigandState","setPdburl","title","Autocomplete","freeSolo","options","finalData","option","pdbid","renderInput","params","newInputValue","length","obj","PdbRequest","Stage","height","StructureComponent","path","selection","TableContainer","Paper","Table","TableHead","TableCell","align","parseFloat","toFixed","TableBody","TableRow","Profile","everify","setEverify","progress","setProgress","progress2","setProgress2","email","emailVerified","storage","getStorage","getDownloadURL","ref","urlt","axios","url","method","responseType","onDownloadProgress","progressEvent","Math","round","loaded","total","response","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","DownCSV","paddingLeft","DownPDB","signOut","StandardRoute","App","Router","Viewer"],"sourceRoot":""}