{"version":3,"file":"component---src-pages-using-typescript-tsx-6c2b599e5635c7736abd.js","mappings":"wLAyCA,UA5BwD,SAAH,OAAMA,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAI,OACnEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,qBACXH,EAAAA,cAAAA,KAAAA,KAAAA,0CACAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,YAAiB,+DACdA,EAAAA,cAAAA,KAAAA,KAAAA,eAAoB,wEAGlEA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,cAAmB,oBACxDA,EAAAA,cAAAA,KAAAA,KAAAA,cAAmB,gBAAaA,EAAAA,cAAAA,KAAAA,KAAAA,YAAiB,UAEvDA,EAAAA,cAAAA,IAAAA,KAAAA,kCACiCD,EAAI,uBAAsB,IACxDD,EAAKM,KAAKC,UAAS,KAEtBL,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGM,KAAK,6CAA2C,kCAE/C,KAGNN,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAG,KAAG,2BACL,C,yDC1BX,SAASN,EAAI,GAAqC,IAAD,IAAlCO,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMR,EAAK,EAALA,MAC9BC,GAASQ,EAAAA,EAAAA,gBAAe,YAAxBR,KAcFS,EAAkBJ,GAAeL,EAAKU,aAAaL,YACnDM,EAAgC,QAApB,EAAGX,EAAKU,oBAAY,aAAjB,EAAmBX,MAExC,OACE,gBAAC,IAAM,CACLa,eAAgB,CACdN,KAAAA,GAEFP,MAAOA,EACPc,cAAeF,EAAY,QAAWA,EAAiB,KACvDJ,KAAM,CACJ,CACEO,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAAShB,GAEX,CACEiB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAf,EAAKU,oBAAY,aAAjB,EAAmBO,SAAM,IAEpC,CACEH,KAAK,gBACLC,QAAShB,GAEX,CACEe,KAAK,sBACLC,QAASN,IAEXS,OAAOX,IAGf,CAEAT,EAAIqB,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["data","path","React","Layout","Seo","title","site","buildTime","href","Link","to","description","lang","meta","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"sourceRoot":""}